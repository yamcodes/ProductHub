{"version":3,"file":"index.development.js","sources":["../../../../node_modules/.pnpm/tiny-invariant@1.3.1/node_modules/tiny-invariant/dist/esm/tiny-invariant.js","../../../../node_modules/.pnpm/tiny-warning@1.0.3/node_modules/tiny-warning/dist/tiny-warning.esm.js","../../../react-router/build/esm/index.js","../../src/useLocalStorage.ts","../../src/theme.tsx","../../src/useMediaQuery.ts","../../src/utils.ts","../../src/styledComponents.ts","../../src/Explorer.tsx","../../src/devtools.tsx"],"sourcesContent":["var isProduction = process.env.NODE_ENV === 'production';\nvar prefix = 'Invariant failed';\nfunction invariant(condition, message) {\n    if (condition) {\n        return;\n    }\n    if (isProduction) {\n        throw new Error(prefix);\n    }\n    var provided = typeof message === 'function' ? message() : message;\n    var value = provided ? \"\".concat(prefix, \": \").concat(provided) : prefix;\n    throw new Error(value);\n}\n\nexport { invariant as default };\n","var isProduction = process.env.NODE_ENV === 'production';\nfunction warning(condition, message) {\n  if (!isProduction) {\n    if (condition) {\n      return;\n    }\n\n    var text = \"Warning: \" + message;\n\n    if (typeof console !== 'undefined') {\n      console.warn(text);\n    }\n\n    try {\n      throw Error(text);\n    } catch (x) {}\n  }\n}\n\nexport default warning;\n","/**\n * @tanstack/react-router/src/index.tsx\n *\n * Copyright (c) TanStack\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { createBrowserHistory } from '@tanstack/history';\nexport * from '@tanstack/history';\nimport invariant from 'tiny-invariant';\nexport { default as invariant } from 'tiny-invariant';\nimport warning from 'tiny-warning';\nexport { default as warning } from 'tiny-warning';\nimport * as React from 'react';\n\nfunction CatchBoundary(props) {\n  const errorComponent = props.errorComponent ?? ErrorComponent;\n  return /*#__PURE__*/React.createElement(CatchBoundaryImpl, {\n    resetKey: props.resetKey,\n    onCatch: props.onCatch,\n    children: ({\n      error\n    }) => {\n      if (error) {\n        return /*#__PURE__*/React.createElement(errorComponent, {\n          error\n        });\n      }\n      return props.children;\n    }\n  });\n}\nclass CatchBoundaryImpl extends React.Component {\n  state = {\n    error: null\n  };\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.error && prevProps.resetKey !== this.props.resetKey) {\n      this.setState({\n        error: null\n      });\n    }\n  }\n  componentDidCatch(error) {\n    console.error(error);\n    this.props.onCatch?.(error);\n  }\n  render() {\n    return this.props.children(this.state);\n  }\n}\nfunction ErrorComponent({\n  error\n}) {\n  const [show, setShow] = React.useState(process.env.NODE_ENV !== 'production');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '.5rem',\n      maxWidth: '100%'\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: '.5rem'\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      fontSize: '1rem'\n    }\n  }, \"Something went wrong!\"), /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      appearance: 'none',\n      fontSize: '.6em',\n      border: '1px solid currentColor',\n      padding: '.1rem .2rem',\n      fontWeight: 'bold',\n      borderRadius: '.25rem'\n    },\n    onClick: () => setShow(d => !d)\n  }, show ? 'Hide Error' : 'Show Error')), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '.25rem'\n    }\n  }), show ? /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"pre\", {\n    style: {\n      fontSize: '.7em',\n      border: '1px solid red',\n      borderRadius: '.25rem',\n      padding: '.3rem',\n      color: 'red',\n      overflow: 'auto'\n    }\n  }, error.message ? /*#__PURE__*/React.createElement(\"code\", null, error.message) : null)) : null);\n}\n\n// export type Expand<T> = T\n\n// type Compute<T> = { [K in keyof T]: T[K] } | never\n\n// type AllKeys<T> = T extends any ? keyof T : never\n\n// export type MergeUnion<T, Keys extends keyof T = keyof T> = Compute<\n//   {\n//     [K in Keys]: T[Keys]\n//   } & {\n//     [K in AllKeys<T>]?: T extends any\n//       ? K extends keyof T\n//         ? T[K]\n//         : never\n//       : never\n//   }\n// >\n// // Sample types to merge\n// type TypeA = {\n//   shared: string\n//   onlyInA: string\n//   nested: {\n//     shared: string\n//     aProp: string\n//   }\n//   array: string[]\n// }\n// type TypeB = {\n//   shared: number\n//   onlyInB: number\n//   nested: {\n//     shared: number\n//     bProp: number\n//   }\n//   array: number[]\n// }\n// type TypeC = {\n//   shared: boolean\n//   onlyInC: boolean\n//   nested: {\n//     shared: boolean\n//     cProp: boolean\n//   }\n//   array: boolean[]\n// }\n// type Test = Expand<Assign<TypeA, TypeB>>\n// // Using DeepMerge to merge TypeA and TypeB\n// type MergedType = Expand<AssignAll<[TypeA, TypeB, TypeC]>>\n//\n\nconst isServer = typeof document === 'undefined';\nfunction last(arr) {\n  return arr[arr.length - 1];\n}\nfunction isFunction(d) {\n  return typeof d === 'function';\n}\nfunction functionalUpdate(updater, previous) {\n  if (isFunction(updater)) {\n    return updater(previous);\n  }\n  return updater;\n}\nfunction pick(parent, keys) {\n  return keys.reduce((obj, key) => {\n    obj[key] = parent[key];\n    return obj;\n  }, {});\n}\n\n/**\n * This function returns `a` if `b` is deeply equal.\n * If not, it will replace any deeply equal children of `b` with those of `a`.\n * This can be used for structural sharing between immutable JSON values for example.\n * Do not use this with signals\n */\nfunction replaceEqualDeep(prev, _next) {\n  if (prev === _next) {\n    return prev;\n  }\n  const next = _next;\n  const array = Array.isArray(prev) && Array.isArray(next);\n  if (array || isPlainObject(prev) && isPlainObject(next)) {\n    const prevSize = array ? prev.length : Object.keys(prev).length;\n    const nextItems = array ? next : Object.keys(next);\n    const nextSize = nextItems.length;\n    const copy = array ? [] : {};\n    let equalItems = 0;\n    for (let i = 0; i < nextSize; i++) {\n      const key = array ? i : nextItems[i];\n      copy[key] = replaceEqualDeep(prev[key], next[key]);\n      if (copy[key] === prev[key]) {\n        equalItems++;\n      }\n    }\n    return prevSize === nextSize && equalItems === prevSize ? prev : copy;\n  }\n  return next;\n}\n\n// Copied from: https://github.com/jonschlinkert/is-plain-object\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  }\n\n  // If has modified constructor\n  const ctor = o.constructor;\n  if (typeof ctor === 'undefined') {\n    return true;\n  }\n\n  // If has modified prototype\n  const prot = ctor.prototype;\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  }\n\n  // If constructor does not have an Object-specific method\n  if (!prot.hasOwnProperty('isPrototypeOf')) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n}\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\nfunction partialDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (isPlainObject(a) && isPlainObject(b)) {\n    return !Object.keys(b).some(key => !partialDeepEqual(a[key], b[key]));\n  }\n  if (Array.isArray(a) && Array.isArray(b)) {\n    return !(a.length !== b.length || a.some((item, index) => !partialDeepEqual(item, b[index])));\n  }\n  return false;\n}\nfunction useStableCallback(fn) {\n  const fnRef = React.useRef(fn);\n  fnRef.current = fn;\n  const ref = React.useRef((...args) => fnRef.current(...args));\n  return ref.current;\n}\nfunction shallow(objA, objB) {\n  if (Object.is(objA, objB)) {\n    return true;\n  }\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n  const keysA = Object.keys(objA);\n  if (keysA.length !== Object.keys(objB).length) {\n    return false;\n  }\n  for (let i = 0; i < keysA.length; i++) {\n    if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) || !Object.is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction useRouteContext(opts) {\n  return useMatch({\n    ...opts,\n    select: match => opts?.select ? opts.select(match.context) : match.context\n  });\n}\nconst useLayoutEffect$1 = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n\nfunction joinPaths(paths) {\n  return cleanPath(paths.filter(Boolean).join('/'));\n}\nfunction cleanPath(path) {\n  // remove double slashes\n  return path.replace(/\\/{2,}/g, '/');\n}\nfunction trimPathLeft(path) {\n  return path === '/' ? path : path.replace(/^\\/{1,}/, '');\n}\nfunction trimPathRight(path) {\n  return path === '/' ? path : path.replace(/\\/{1,}$/, '');\n}\nfunction trimPath(path) {\n  return trimPathRight(trimPathLeft(path));\n}\nfunction resolvePath(basepath, base, to) {\n  base = base.replace(new RegExp(`^${basepath}`), '/');\n  to = to.replace(new RegExp(`^${basepath}`), '/');\n  let baseSegments = parsePathname(base);\n  const toSegments = parsePathname(to);\n  toSegments.forEach((toSegment, index) => {\n    if (toSegment.value === '/') {\n      if (!index) {\n        // Leading slash\n        baseSegments = [toSegment];\n      } else if (index === toSegments.length - 1) {\n        // Trailing Slash\n        baseSegments.push(toSegment);\n      } else ;\n    } else if (toSegment.value === '..') {\n      // Extra trailing slash? pop it off\n      if (baseSegments.length > 1 && last(baseSegments)?.value === '/') {\n        baseSegments.pop();\n      }\n      baseSegments.pop();\n    } else if (toSegment.value === '.') {\n      return;\n    } else {\n      baseSegments.push(toSegment);\n    }\n  });\n  const joined = joinPaths([basepath, ...baseSegments.map(d => d.value)]);\n  return cleanPath(joined);\n}\nfunction parsePathname(pathname) {\n  if (!pathname) {\n    return [];\n  }\n  pathname = cleanPath(pathname);\n  const segments = [];\n  if (pathname.slice(0, 1) === '/') {\n    pathname = pathname.substring(1);\n    segments.push({\n      type: 'pathname',\n      value: '/'\n    });\n  }\n  if (!pathname) {\n    return segments;\n  }\n\n  // Remove empty segments and '.' segments\n  const split = pathname.split('/').filter(Boolean);\n  segments.push(...split.map(part => {\n    if (part === '$' || part === '*') {\n      return {\n        type: 'wildcard',\n        value: part\n      };\n    }\n    if (part.charAt(0) === '$') {\n      return {\n        type: 'param',\n        value: part\n      };\n    }\n    return {\n      type: 'pathname',\n      value: part\n    };\n  }));\n  if (pathname.slice(-1) === '/') {\n    pathname = pathname.substring(1);\n    segments.push({\n      type: 'pathname',\n      value: '/'\n    });\n  }\n  return segments;\n}\nfunction interpolatePath(path, params, leaveWildcards = false) {\n  const interpolatedPathSegments = parsePathname(path);\n  return joinPaths(interpolatedPathSegments.map(segment => {\n    if (segment.type === 'wildcard') {\n      const value = params[segment.value];\n      if (leaveWildcards) return `${segment.value}${value ?? ''}`;\n      return value;\n    }\n    if (segment.type === 'param') {\n      return params[segment.value.substring(1)] ?? '';\n    }\n    return segment.value;\n  }));\n}\nfunction matchPathname(basepath, currentPathname, matchLocation) {\n  const pathParams = matchByPath(basepath, currentPathname, matchLocation);\n  // const searchMatched = matchBySearch(location.search, matchLocation)\n\n  if (matchLocation.to && !pathParams) {\n    return;\n  }\n  return pathParams ?? {};\n}\nfunction matchByPath(basepath, from, matchLocation) {\n  // Remove the base path from the pathname\n  from = basepath != '/' ? from.substring(basepath.length) : from;\n  // Default to to $ (wildcard)\n  const to = `${matchLocation.to ?? '$'}`;\n  // Parse the from and to\n  const baseSegments = parsePathname(from);\n  const routeSegments = parsePathname(to);\n  if (!from.startsWith('/')) {\n    baseSegments.unshift({\n      type: 'pathname',\n      value: '/'\n    });\n  }\n  if (!to.startsWith('/')) {\n    routeSegments.unshift({\n      type: 'pathname',\n      value: '/'\n    });\n  }\n  const params = {};\n  let isMatch = (() => {\n    for (let i = 0; i < Math.max(baseSegments.length, routeSegments.length); i++) {\n      const baseSegment = baseSegments[i];\n      const routeSegment = routeSegments[i];\n      const isLastBaseSegment = i >= baseSegments.length - 1;\n      const isLastRouteSegment = i >= routeSegments.length - 1;\n      if (routeSegment) {\n        if (routeSegment.type === 'wildcard') {\n          if (baseSegment?.value) {\n            params['*'] = joinPaths(baseSegments.slice(i).map(d => d.value));\n            return true;\n          }\n          return false;\n        }\n        if (routeSegment.type === 'pathname') {\n          if (routeSegment.value === '/' && !baseSegment?.value) {\n            return true;\n          }\n          if (baseSegment) {\n            if (matchLocation.caseSensitive) {\n              if (routeSegment.value !== baseSegment.value) {\n                return false;\n              }\n            } else if (routeSegment.value.toLowerCase() !== baseSegment.value.toLowerCase()) {\n              return false;\n            }\n          }\n        }\n        if (!baseSegment) {\n          return false;\n        }\n        if (routeSegment.type === 'param') {\n          if (baseSegment?.value === '/') {\n            return false;\n          }\n          if (baseSegment.value.charAt(0) !== '$') {\n            params[routeSegment.value.substring(1)] = baseSegment.value;\n          }\n        }\n      }\n      if (!isLastBaseSegment && isLastRouteSegment) {\n        return !!matchLocation.fuzzy;\n      }\n    }\n    return true;\n  })();\n  return isMatch ? params : undefined;\n}\n\n// Detect if we're in the DOM\n\nfunction redirect(opts) {\n  opts.isRedirect = true;\n  return opts;\n}\nfunction isRedirect(obj) {\n  return !!obj?.isRedirect;\n}\n\n// @ts-nocheck\n\n// qss has been slightly modified and inlined here for our use cases (and compression's sake). We've included it as a hard dependency for MIT license attribution.\n\nfunction encode(obj, pfx) {\n  var k,\n    i,\n    tmp,\n    str = '';\n  for (k in obj) {\n    if ((tmp = obj[k]) !== void 0) {\n      if (Array.isArray(tmp)) {\n        for (i = 0; i < tmp.length; i++) {\n          str && (str += '&');\n          str += encodeURIComponent(k) + '=' + encodeURIComponent(tmp[i]);\n        }\n      } else {\n        str && (str += '&');\n        str += encodeURIComponent(k) + '=' + encodeURIComponent(tmp);\n      }\n    }\n  }\n  return (pfx || '') + str;\n}\nfunction toValue(mix) {\n  if (!mix) return '';\n  var str = decodeURIComponent(mix);\n  if (str === 'false') return false;\n  if (str === 'true') return true;\n  return +str * 0 === 0 && +str + '' === str ? +str : str;\n}\nfunction decode(str) {\n  var tmp,\n    k,\n    out = {},\n    arr = str.split('&');\n  while (tmp = arr.shift()) {\n    tmp = tmp.split('=');\n    k = tmp.shift();\n    if (out[k] !== void 0) {\n      out[k] = [].concat(out[k], toValue(tmp.shift()));\n    } else {\n      out[k] = toValue(tmp.shift());\n    }\n  }\n  return out;\n}\n\nconst defaultParseSearch = parseSearchWith(JSON.parse);\nconst defaultStringifySearch = stringifySearchWith(JSON.stringify, JSON.parse);\nfunction parseSearchWith(parser) {\n  return searchStr => {\n    if (searchStr.substring(0, 1) === '?') {\n      searchStr = searchStr.substring(1);\n    }\n    let query = decode(searchStr);\n\n    // Try to parse any query params that might be json\n    for (let key in query) {\n      const value = query[key];\n      if (typeof value === 'string') {\n        try {\n          query[key] = parser(value);\n        } catch (err) {\n          //\n        }\n      }\n    }\n    return query;\n  };\n}\nfunction stringifySearchWith(stringify, parser) {\n  function stringifyValue(val) {\n    if (typeof val === 'object' && val !== null) {\n      try {\n        return stringify(val);\n      } catch (err) {\n        // silent\n      }\n    } else if (typeof val === 'string' && typeof parser === 'function') {\n      try {\n        // Check if it's a valid parseable string.\n        // If it is, then stringify it again.\n        parser(val);\n        return stringify(val);\n      } catch (err) {\n        // silent\n      }\n    }\n    return val;\n  }\n  return search => {\n    search = {\n      ...search\n    };\n    if (search) {\n      Object.keys(search).forEach(key => {\n        const val = search[key];\n        if (typeof val === 'undefined' || val === undefined) {\n          delete search[key];\n        } else {\n          search[key] = stringifyValue(val);\n        }\n      });\n    }\n    const searchStr = encode(search).toString();\n    return searchStr ? `?${searchStr}` : '';\n  };\n}\n\n//\n\n//\n\nconst componentTypes = ['component', 'errorComponent', 'pendingComponent'];\nclass Router {\n  // dehydratedData?: TDehydrated\n  // resetNextScroll = false\n  // tempLocationKey = `${Math.round(Math.random() * 10000000)}`\n  constructor(options) {\n    this.options = {\n      defaultPreloadDelay: 50,\n      context: undefined,\n      ...options,\n      stringifySearch: options?.stringifySearch ?? defaultStringifySearch,\n      parseSearch: options?.parseSearch ?? defaultParseSearch\n    };\n    this.routeTree = this.options.routeTree;\n  }\n  subscribers = new Set();\n  subscribe = (eventType, fn) => {\n    const listener = {\n      eventType,\n      fn\n    };\n    this.subscribers.add(listener);\n    return () => {\n      this.subscribers.delete(listener);\n    };\n  };\n  emit = routerEvent => {\n    this.subscribers.forEach(listener => {\n      if (listener.eventType === routerEvent.type) {\n        listener.fn(routerEvent);\n      }\n    });\n  };\n\n  // dehydrate = (): DehydratedRouter => {\n  //   return {\n  //     state: {\n  //       dehydratedMatches: state.matches.map((d) =>\n  //         pick(d, ['fetchedAt', 'invalid', 'id', 'status', 'updatedAt']),\n  //       ),\n  //     },\n  //   }\n  // }\n\n  // hydrate = async (__do_not_use_server_ctx?: HydrationCtx) => {\n  //   let _ctx = __do_not_use_server_ctx\n  //   // Client hydrates from window\n  //   if (typeof document !== 'undefined') {\n  //     _ctx = window.__TSR_DEHYDRATED__\n  //   }\n\n  //   invariant(\n  //     _ctx,\n  //     'Expected to find a __TSR_DEHYDRATED__ property on window... but we did not. Did you forget to render <DehydrateRouter /> in your app?',\n  //   )\n\n  //   const ctx = _ctx\n  //   this.dehydratedData = ctx.payload as any\n  //   this.options.hydrate?.(ctx.payload as any)\n  //   const dehydratedState = ctx.router.state\n\n  //   let matches = this.matchRoutes(\n  //     state.location.pathname,\n  //     state.location.search,\n  //   ).map((match) => {\n  //     const dehydratedMatch = dehydratedState.dehydratedMatches.find(\n  //       (d) => d.id === match.id,\n  //     )\n\n  //     invariant(\n  //       dehydratedMatch,\n  //       `Could not find a client-side match for dehydrated match with id: ${match.id}!`,\n  //     )\n\n  //     if (dehydratedMatch) {\n  //       return {\n  //         ...match,\n  //         ...dehydratedMatch,\n  //       }\n  //     }\n  //     return match\n  //   })\n\n  //   this.setState((s) => {\n  //     return {\n  //       ...s,\n  //       matches: dehydratedState.dehydratedMatches as any,\n  //     }\n  //   })\n  // }\n\n  // TODO:\n  // injectedHtml: (string | (() => Promise<string> | string))[] = []\n\n  // TODO:\n  // injectHtml = async (html: string | (() => Promise<string> | string)) => {\n  //   this.injectedHtml.push(html)\n  // }\n\n  // TODO:\n  // dehydrateData = <T>(key: any, getData: T | (() => Promise<T> | T)) => {\n  //   if (typeof document === 'undefined') {\n  //     const strKey = typeof key === 'string' ? key : JSON.stringify(key)\n\n  //     this.injectHtml(async () => {\n  //       const id = `__TSR_DEHYDRATED__${strKey}`\n  //       const data =\n  //         typeof getData === 'function' ? await (getData as any)() : getData\n  //       return `<script id='${id}' suppressHydrationWarning>window[\"__TSR_DEHYDRATED__${escapeJSON(\n  //         strKey,\n  //       )}\"] = ${JSON.stringify(data)}\n  //       ;(() => {\n  //         var el = document.getElementById('${id}')\n  //         el.parentElement.removeChild(el)\n  //       })()\n  //       </script>`\n  //     })\n\n  //     return () => this.hydrateData<T>(key)\n  //   }\n\n  //   return () => undefined\n  // }\n\n  // hydrateData = <T = unknown>(key: any) => {\n  //   if (typeof document !== 'undefined') {\n  //     const strKey = typeof key === 'string' ? key : JSON.stringify(key)\n\n  //     return window[`__TSR_DEHYDRATED__${strKey}` as any] as T\n  //   }\n\n  //   return undefined\n  // }\n\n  // resolveMatchPromise = (matchId: string, key: string, value: any) => {\n  //   state.matches\n  //     .find((d) => d.id === matchId)\n  //     ?.__promisesByKey[key]?.resolve(value)\n  // }\n\n  // setRouteMatch = (\n  //   id: string,\n  //   pending: boolean,\n  //   updater: NonNullableUpdater<RouteMatch<TRouteTree>>,\n  // ) => {\n  //   const key = pending ? 'pendingMatches' : 'matches'\n\n  //   this.setState((prev) => {\n  //     return {\n  //       ...prev,\n  //       [key]: prev[key].map((d) => {\n  //         if (d.id === id) {\n  //           return functionalUpdate(updater, d)\n  //         }\n\n  //         return d\n  //       }),\n  //     }\n  //   })\n  // }\n\n  // setPendingRouteMatch = (\n  //   id: string,\n  //   updater: NonNullableUpdater<RouteMatch<TRouteTree>>,\n  // ) => {\n  //   this.setRouteMatch(id, true, updater)\n  // }\n}\n\n// A function that takes an import() argument which is a function and returns a new function that will\n// proxy arguments from the caller to the imported function, retaining all type\n// information along the way\nfunction lazyFn(fn, key) {\n  return async (...args) => {\n    const imported = await fn();\n    return imported[key || 'default'](...args);\n  };\n}\n\nconst routerContext = /*#__PURE__*/React.createContext(null);\nif (typeof document !== 'undefined') {\n  window.__TSR_ROUTER_CONTEXT__ = routerContext;\n}\nconst preloadWarning = 'Error preloading route! ☝️';\nfunction isCtrlEvent(e) {\n  return !!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey);\n}\nclass SearchParamError extends Error {}\nclass PathParamError extends Error {}\nfunction getInitialRouterState(location) {\n  return {\n    status: 'idle',\n    resolvedLocation: location,\n    location,\n    matches: [],\n    pendingMatches: [],\n    lastUpdated: Date.now()\n  };\n}\nfunction RouterProvider({\n  router,\n  ...rest\n}) {\n  const options = {\n    ...router.options,\n    ...rest,\n    context: {\n      ...router.options.context,\n      ...rest?.context\n    }\n  };\n  const history = React.useState(() => options.history ?? createBrowserHistory())[0];\n  const tempLocationKeyRef = React.useRef(`${Math.round(Math.random() * 10000000)}`);\n  const resetNextScrollRef = React.useRef(true);\n  const navigateTimeoutRef = React.useRef(null);\n  const latestLoadPromiseRef = React.useRef(Promise.resolve());\n  const checkLatest = promise => {\n    return latestLoadPromiseRef.current !== promise ? latestLoadPromiseRef.current : undefined;\n  };\n  const parseLocation = useStableCallback(previousLocation => {\n    const parse = ({\n      pathname,\n      search,\n      hash,\n      state\n    }) => {\n      const parsedSearch = options.parseSearch(search);\n      return {\n        pathname: pathname,\n        searchStr: search,\n        search: replaceEqualDeep(previousLocation?.search, parsedSearch),\n        hash: hash.split('#').reverse()[0] ?? '',\n        href: `${pathname}${search}${hash}`,\n        state: replaceEqualDeep(previousLocation?.state, state)\n      };\n    };\n    const location = parse(history.location);\n    let {\n      __tempLocation,\n      __tempKey\n    } = location.state;\n    if (__tempLocation && (!__tempKey || __tempKey === tempLocationKeyRef.current)) {\n      // Sync up the location keys\n      const parsedTempLocation = parse(__tempLocation);\n      parsedTempLocation.state.key = location.state.key;\n      delete parsedTempLocation.state.__tempLocation;\n      return {\n        ...parsedTempLocation,\n        maskedLocation: location\n      };\n    }\n    return location;\n  });\n  const latestLocationRef = React.useRef(parseLocation());\n  const [preState, setState] = React.useState(() => getInitialRouterState(latestLocationRef.current));\n  const [isTransitioning, startReactTransition] = React.useTransition();\n  const state = React.useMemo(() => ({\n    ...preState,\n    status: isTransitioning ? 'pending' : 'idle',\n    location: isTransitioning ? latestLocationRef.current : preState.location\n  }), [preState, isTransitioning]);\n  React.useLayoutEffect(() => {\n    if (!isTransitioning && state.resolvedLocation !== state.location) {\n      router.emit({\n        type: 'onResolved',\n        fromLocation: state.resolvedLocation,\n        toLocation: state.location,\n        pathChanged: state.location.href !== state.resolvedLocation?.href\n      });\n      setState(s => ({\n        ...s,\n        resolvedLocation: s.location\n      }));\n    }\n  });\n  const basepath = `/${trimPath(options.basepath ?? '') ?? ''}`;\n  const resolvePathWithBase = useStableCallback((from, path) => {\n    return resolvePath(basepath, from, cleanPath(path));\n  });\n  const [routesById, routesByPath] = React.useMemo(() => {\n    const routesById = {};\n    const routesByPath = {};\n    const recurseRoutes = routes => {\n      routes.forEach((route, i) => {\n        route.init({\n          originalIndex: i\n        });\n        const existingRoute = routesById[route.id];\n        invariant(!existingRoute, `Duplicate routes found with id: ${String(route.id)}`);\n        routesById[route.id] = route;\n        if (!route.isRoot && route.path) {\n          const trimmedFullPath = trimPathRight(route.fullPath);\n          if (!routesByPath[trimmedFullPath] || route.fullPath.endsWith('/')) {\n            routesByPath[trimmedFullPath] = route;\n          }\n        }\n        const children = route.children;\n        if (children?.length) {\n          recurseRoutes(children);\n        }\n      });\n    };\n    recurseRoutes([router.routeTree]);\n    return [routesById, routesByPath];\n  }, []);\n  const looseRoutesById = routesById;\n  const flatRoutes = React.useMemo(() => Object.values(routesByPath).map((d, i) => {\n    const trimmed = trimPath(d.fullPath);\n    const parsed = parsePathname(trimmed);\n    while (parsed.length > 1 && parsed[0]?.value === '/') {\n      parsed.shift();\n    }\n    const score = parsed.map(d => {\n      if (d.type === 'param') {\n        return 0.5;\n      }\n      if (d.type === 'wildcard') {\n        return 0.25;\n      }\n      return 1;\n    });\n    return {\n      child: d,\n      trimmed,\n      parsed,\n      index: i,\n      score\n    };\n  }).sort((a, b) => {\n    let isIndex = a.trimmed === '/' ? 1 : b.trimmed === '/' ? -1 : 0;\n    if (isIndex !== 0) return isIndex;\n    const length = Math.min(a.score.length, b.score.length);\n\n    // Sort by length of score\n    if (a.score.length !== b.score.length) {\n      return b.score.length - a.score.length;\n    }\n\n    // Sort by min available score\n    for (let i = 0; i < length; i++) {\n      if (a.score[i] !== b.score[i]) {\n        return b.score[i] - a.score[i];\n      }\n    }\n\n    // Sort by min available parsed value\n    for (let i = 0; i < length; i++) {\n      if (a.parsed[i].value !== b.parsed[i].value) {\n        return a.parsed[i].value > b.parsed[i].value ? 1 : -1;\n      }\n    }\n\n    // Sort by length of trimmed full path\n    if (a.trimmed !== b.trimmed) {\n      return a.trimmed > b.trimmed ? 1 : -1;\n    }\n\n    // Sort by original index\n    return a.index - b.index;\n  }).map((d, i) => {\n    d.child.rank = i;\n    return d.child;\n  }), [routesByPath]);\n  const matchRoutes = useStableCallback((pathname, locationSearch, opts) => {\n    let routeParams = {};\n    let foundRoute = flatRoutes.find(route => {\n      const matchedParams = matchPathname(basepath, trimPathRight(pathname), {\n        to: route.fullPath,\n        caseSensitive: route.options.caseSensitive ?? options.caseSensitive,\n        fuzzy: false\n      });\n      if (matchedParams) {\n        routeParams = matchedParams;\n        return true;\n      }\n      return false;\n    });\n    let routeCursor = foundRoute || routesById['__root__'];\n    let matchedRoutes = [routeCursor];\n    // let includingLayouts = true\n    while (routeCursor?.parentRoute) {\n      routeCursor = routeCursor.parentRoute;\n      if (routeCursor) matchedRoutes.unshift(routeCursor);\n    }\n\n    // Existing matches are matches that are already loaded along with\n    // pending matches that are still loading\n\n    const parseErrors = matchedRoutes.map(route => {\n      let parsedParamsError;\n      if (route.options.parseParams) {\n        try {\n          const parsedParams = route.options.parseParams(routeParams);\n          // Add the parsed params to the accumulated params bag\n          Object.assign(routeParams, parsedParams);\n        } catch (err) {\n          parsedParamsError = new PathParamError(err.message, {\n            cause: err\n          });\n          if (opts?.throwOnError) {\n            throw parsedParamsError;\n          }\n          return parsedParamsError;\n        }\n      }\n      return;\n    });\n    const matches = matchedRoutes.map((route, index) => {\n      const interpolatedPath = interpolatePath(route.path, routeParams);\n      const matchId = interpolatePath(route.id, routeParams, true);\n\n      // Waste not, want not. If we already have a match for this route,\n      // reuse it. This is important for layout routes, which might stick\n      // around between navigation actions that only change leaf routes.\n      const existingMatch = getRouteMatch(state, matchId);\n      if (existingMatch) {\n        return {\n          ...existingMatch\n        };\n      }\n\n      // Create a fresh route match\n      const hasLoaders = !!(route.options.load || componentTypes.some(d => route.options[d]?.preload));\n      const routeMatch = {\n        id: matchId,\n        routeId: route.id,\n        params: routeParams,\n        pathname: joinPaths([basepath, interpolatedPath]),\n        updatedAt: Date.now(),\n        routeSearch: {},\n        search: {},\n        status: hasLoaders ? 'pending' : 'success',\n        isFetching: false,\n        invalid: false,\n        error: undefined,\n        paramsError: parseErrors[index],\n        searchError: undefined,\n        loadPromise: Promise.resolve(),\n        context: undefined,\n        abortController: new AbortController(),\n        fetchedAt: 0\n      };\n      return routeMatch;\n    });\n\n    // Take each match and resolve its search params and context\n    // This has to happen after the matches are created or found\n    // so that we can use the parent match's search params and context\n    matches.forEach((match, i) => {\n      const parentMatch = matches[i - 1];\n      const route = looseRoutesById[match.routeId];\n      const searchInfo = (() => {\n        // Validate the search params and stabilize them\n        const parentSearchInfo = {\n          search: parentMatch?.search ?? locationSearch,\n          routeSearch: parentMatch?.routeSearch ?? locationSearch\n        };\n        try {\n          const validator = typeof route.options.validateSearch === 'object' ? route.options.validateSearch.parse : route.options.validateSearch;\n          let routeSearch = validator?.(parentSearchInfo.search) ?? {};\n          let search = {\n            ...parentSearchInfo.search,\n            ...routeSearch\n          };\n          routeSearch = replaceEqualDeep(match.routeSearch, routeSearch);\n          search = replaceEqualDeep(match.search, search);\n          return {\n            routeSearch,\n            search,\n            searchDidChange: match.routeSearch !== routeSearch\n          };\n        } catch (err) {\n          match.searchError = new SearchParamError(err.message, {\n            cause: err\n          });\n          if (opts?.throwOnError) {\n            throw match.searchError;\n          }\n          return parentSearchInfo;\n        }\n      })();\n      Object.assign(match, searchInfo);\n    });\n    return matches;\n  });\n  const cancelMatch = useStableCallback(id => {\n    getRouteMatch(state, id)?.abortController?.abort();\n  });\n  const cancelMatches = useStableCallback(state => {\n    state.matches.forEach(match => {\n      cancelMatch(match.id);\n    });\n  });\n  const buildLocation = useStableCallback(opts => {\n    const build = (dest = {}, matches) => {\n      const from = latestLocationRef.current;\n      const fromPathname = dest.from ?? from.pathname;\n      let pathname = resolvePathWithBase(fromPathname, `${dest.to ?? ''}`);\n      const fromMatches = matchRoutes(fromPathname, from.search);\n      const stayingMatches = matches?.filter(d => fromMatches?.find(e => e.routeId === d.routeId));\n      const prevParams = {\n        ...last(fromMatches)?.params\n      };\n      let nextParams = (dest.params ?? true) === true ? prevParams : functionalUpdate(dest.params, prevParams);\n      if (nextParams) {\n        matches?.map(d => looseRoutesById[d.routeId].options.stringifyParams).filter(Boolean).forEach(fn => {\n          nextParams = {\n            ...nextParams,\n            ...fn(nextParams)\n          };\n        });\n      }\n      pathname = interpolatePath(pathname, nextParams ?? {});\n      const preSearchFilters = stayingMatches?.map(match => looseRoutesById[match.routeId].options.preSearchFilters ?? []).flat().filter(Boolean) ?? [];\n      const postSearchFilters = stayingMatches?.map(match => looseRoutesById[match.routeId].options.postSearchFilters ?? []).flat().filter(Boolean) ?? [];\n\n      // Pre filters first\n      const preFilteredSearch = preSearchFilters?.length ? preSearchFilters?.reduce((prev, next) => next(prev), from.search) : from.search;\n\n      // Then the link/navigate function\n      const destSearch = dest.search === true ? preFilteredSearch // Preserve resolvedFrom true\n      : dest.search ? functionalUpdate(dest.search, preFilteredSearch) ?? {} // Updater\n      : preSearchFilters?.length ? preFilteredSearch // Preserve resolvedFrom filters\n      : {};\n\n      // Then post filters\n      const postFilteredSearch = postSearchFilters?.length ? postSearchFilters.reduce((prev, next) => next(prev), destSearch) : destSearch;\n      const search = replaceEqualDeep(from.search, postFilteredSearch);\n      const searchStr = options.stringifySearch(search);\n      const hash = dest.hash === true ? from.hash : dest.hash ? functionalUpdate(dest.hash, from.hash) : from.hash;\n      const hashStr = hash ? `#${hash}` : '';\n      let nextState = dest.state === true ? from.state : dest.state ? functionalUpdate(dest.state, from.state) : from.state;\n      nextState = replaceEqualDeep(from.state, nextState);\n      return {\n        pathname,\n        search,\n        searchStr,\n        state: nextState,\n        hash,\n        href: history.createHref(`${pathname}${searchStr}${hashStr}`),\n        unmaskOnReload: dest.unmaskOnReload\n      };\n    };\n    const buildWithMatches = (dest = {}, maskedDest) => {\n      let next = build(dest);\n      let maskedNext = maskedDest ? build(maskedDest) : undefined;\n      if (!maskedNext) {\n        let params = {};\n        let foundMask = options.routeMasks?.find(d => {\n          const match = matchPathname(basepath, next.pathname, {\n            to: d.from,\n            caseSensitive: false,\n            fuzzy: false\n          });\n          if (match) {\n            params = match;\n            return true;\n          }\n          return false;\n        });\n        if (foundMask) {\n          foundMask = {\n            ...foundMask,\n            from: interpolatePath(foundMask.from, params)\n          };\n          maskedDest = foundMask;\n          maskedNext = build(maskedDest);\n        }\n      }\n      const nextMatches = matchRoutes(next.pathname, next.search);\n      const maskedMatches = maskedNext ? matchRoutes(maskedNext.pathname, maskedNext.search) : undefined;\n      const maskedFinal = maskedNext ? build(maskedDest, maskedMatches) : undefined;\n      const final = build(dest, nextMatches);\n      if (maskedFinal) {\n        final.maskedLocation = maskedFinal;\n      }\n      return final;\n    };\n    if (opts.mask) {\n      return buildWithMatches(opts, {\n        ...pick(opts, ['from']),\n        ...opts.mask\n      });\n    }\n    return buildWithMatches(opts);\n  });\n  const commitLocation = useStableCallback(async ({\n    startTransition,\n    ...next\n  }) => {\n    if (navigateTimeoutRef.current) clearTimeout(navigateTimeoutRef.current);\n    const isSameUrl = latestLocationRef.current.href === next.href;\n\n    // If the next urls are the same and we're not replacing,\n    // do nothing\n    if (!isSameUrl || !next.replace) {\n      let {\n        maskedLocation,\n        ...nextHistory\n      } = next;\n      if (maskedLocation) {\n        nextHistory = {\n          ...maskedLocation,\n          state: {\n            ...maskedLocation.state,\n            __tempKey: undefined,\n            __tempLocation: {\n              ...nextHistory,\n              search: nextHistory.searchStr,\n              state: {\n                ...nextHistory.state,\n                __tempKey: undefined,\n                __tempLocation: undefined,\n                key: undefined\n              }\n            }\n          }\n        };\n        if (nextHistory.unmaskOnReload ?? options.unmaskOnReload ?? false) {\n          nextHistory.state.__tempKey = tempLocationKeyRef.current;\n        }\n      }\n      const apply = () => {\n        history[next.replace ? 'replace' : 'push'](nextHistory.href, nextHistory.state);\n      };\n      if (startTransition ?? true) {\n        startReactTransition(apply);\n      } else {\n        apply();\n      }\n    }\n    resetNextScrollRef.current = next.resetScroll ?? true;\n    return latestLoadPromiseRef.current;\n  });\n  const buildAndCommitLocation = useStableCallback(({\n    replace,\n    resetScroll,\n    startTransition,\n    ...rest\n  } = {}) => {\n    const location = buildLocation(rest);\n    return commitLocation({\n      ...location,\n      startTransition,\n      replace,\n      resetScroll\n    });\n  });\n  const navigate = useStableCallback(({\n    from,\n    to = '',\n    ...rest\n  }) => {\n    // If this link simply reloads the current route,\n    // make sure it has a new key so it will trigger a data refresh\n\n    // If this `to` is a valid external URL, return\n    // null for LinkUtils\n    const toString = String(to);\n    const fromString = typeof from === 'undefined' ? from : String(from);\n    let isExternal;\n    try {\n      new URL(`${toString}`);\n      isExternal = true;\n    } catch (e) {}\n    invariant(!isExternal, 'Attempting to navigate to external url with this.navigate!');\n    return buildAndCommitLocation({\n      ...rest,\n      from: fromString,\n      to: toString\n    });\n  });\n  const loadMatches = useStableCallback(async ({\n    checkLatest,\n    matches,\n    preload\n  }) => {\n    let latestPromise;\n    let firstBadMatchIndex;\n\n    // Check each match middleware to see if the route can be accessed\n    try {\n      for (let [index, match] of matches.entries()) {\n        const parentMatch = matches[index - 1];\n        const route = looseRoutesById[match.routeId];\n        const handleError = (err, code) => {\n          err.routerCode = code;\n          firstBadMatchIndex = firstBadMatchIndex ?? index;\n          if (isRedirect(err)) {\n            throw err;\n          }\n          try {\n            route.options.onError?.(err);\n          } catch (errorHandlerErr) {\n            err = errorHandlerErr;\n            if (isRedirect(errorHandlerErr)) {\n              throw errorHandlerErr;\n            }\n          }\n          matches[index] = match = {\n            ...match,\n            error: err,\n            status: 'error',\n            updatedAt: Date.now()\n          };\n        };\n        try {\n          if (match.paramsError) {\n            handleError(match.paramsError, 'PARSE_PARAMS');\n          }\n          if (match.searchError) {\n            handleError(match.searchError, 'VALIDATE_SEARCH');\n          }\n          const parentContext = parentMatch?.context ?? options.context ?? {};\n          const beforeLoadContext = (await route.options.beforeLoad?.({\n            search: match.search,\n            abortController: match.abortController,\n            params: match.params,\n            preload: !!preload,\n            context: parentContext,\n            location: state.location,\n            navigate: opts => navigate({\n              ...opts,\n              from: match.pathname\n            }),\n            buildLocation\n          })) ?? {};\n          const context = {\n            ...parentContext,\n            ...beforeLoadContext\n          };\n          matches[index] = match = {\n            ...match,\n            context: replaceEqualDeep(match.context, context)\n          };\n        } catch (err) {\n          handleError(err, 'BEFORE_LOAD');\n          break;\n        }\n      }\n    } catch (err) {\n      if (isRedirect(err)) {\n        if (!preload) navigate(err);\n        return matches;\n      }\n      throw err;\n    }\n    const validResolvedMatches = matches.slice(0, firstBadMatchIndex);\n    const matchPromises = [];\n    validResolvedMatches.forEach((match, index) => {\n      matchPromises.push((async () => {\n        const parentMatchPromise = matchPromises[index - 1];\n        const route = looseRoutesById[match.routeId];\n        if (match.isFetching) {\n          return getRouteMatch(state, match.id)?.loadPromise;\n        }\n        const handleIfRedirect = err => {\n          if (isRedirect(err)) {\n            if (!preload) {\n              navigate(err);\n            }\n            return true;\n          }\n          return false;\n        };\n        const load = async () => {\n          try {\n            const componentsPromise = Promise.all(componentTypes.map(async type => {\n              const component = route.options[type];\n              if (component?.preload) {\n                await component.preload();\n              }\n            }));\n            const loaderPromise = route.options.load?.({\n              params: match.params,\n              search: match.search,\n              preload: !!preload,\n              parentMatchPromise,\n              abortController: match.abortController,\n              context: match.context,\n              location: state.location,\n              navigate: opts => navigate({\n                ...opts,\n                from: match.pathname\n              })\n            });\n            const [_, loaderContext] = await Promise.all([componentsPromise, loaderPromise]);\n            if (latestPromise = checkLatest()) return await latestPromise;\n            matches[index] = match = {\n              ...match,\n              error: undefined,\n              status: 'success',\n              isFetching: false,\n              updatedAt: Date.now()\n            };\n          } catch (error) {\n            if (latestPromise = checkLatest()) return await latestPromise;\n            if (handleIfRedirect(error)) return;\n            try {\n              route.options.onError?.(error);\n            } catch (onErrorError) {\n              error = onErrorError;\n              if (handleIfRedirect(onErrorError)) return;\n            }\n            matches[index] = match = {\n              ...match,\n              error,\n              status: 'error',\n              isFetching: false,\n              updatedAt: Date.now()\n            };\n          }\n          if (!preload) {\n            setState(s => ({\n              ...s,\n              matches: s.matches.map(d => d.id === match.id ? match : d)\n            }));\n          }\n        };\n        let loadPromise;\n        matches[index] = match = {\n          ...match,\n          isFetching: true,\n          fetchedAt: Date.now(),\n          invalid: false\n        };\n        loadPromise = load();\n        matches[index] = match = {\n          ...match,\n          loadPromise\n        };\n        await loadPromise;\n      })());\n    });\n    await Promise.all(matchPromises);\n    return matches;\n  });\n  const load = useStableCallback(async () => {\n    const promise = new Promise(async (resolve, reject) => {\n      const next = latestLocationRef.current;\n      const prevLocation = state.resolvedLocation;\n      const pathDidChange = prevLocation.href !== next.href;\n      let latestPromise;\n\n      // Cancel any pending matches\n      cancelMatches(state);\n      router.emit({\n        type: 'onBeforeLoad',\n        fromLocation: prevLocation,\n        toLocation: next,\n        pathChanged: pathDidChange\n      });\n\n      // Match the routes\n      let matches = matchRoutes(next.pathname, next.search, {\n        debug: true\n      });\n      const previousMatches = state.matches;\n\n      // Ingest the new matches\n      setState(s => ({\n        ...s,\n        status: 'pending',\n        location: next,\n        matches\n      }));\n      try {\n        try {\n          // Load the matches\n          await loadMatches({\n            matches,\n            checkLatest: () => checkLatest(promise)\n          });\n        } catch (err) {\n          // swallow this error, since we'll display the\n          // errors on the route components\n        }\n\n        // Only apply the latest transition\n        if (latestPromise = checkLatest(promise)) {\n          return latestPromise;\n        }\n        const exitingMatchIds = previousMatches.filter(id => !state.pendingMatches.includes(id));\n        const enteringMatchIds = state.pendingMatches.filter(id => !previousMatches.includes(id));\n        const stayingMatchIds = previousMatches.filter(id => state.pendingMatches.includes(id))\n\n        // setState((s) => ({\n        //   ...s,\n        //   status: 'idle',\n        //   resolvedLocation: s.location,\n        // }))\n\n        //\n        ;\n        [[exitingMatchIds, 'onLeave'], [enteringMatchIds, 'onEnter'], [stayingMatchIds, 'onTransition']].forEach(([matches, hook]) => {\n          matches.forEach(match => {\n            looseRoutesById[match.routeId].options[hook]?.(match);\n          });\n        });\n        router.emit({\n          type: 'onLoad',\n          fromLocation: prevLocation,\n          toLocation: next,\n          pathChanged: pathDidChange\n        });\n        resolve();\n      } catch (err) {\n        // Only apply the latest transition\n        if (latestPromise = checkLatest(promise)) {\n          return latestPromise;\n        }\n        reject(err);\n      }\n    });\n    latestLoadPromiseRef.current = promise;\n    return latestLoadPromiseRef.current;\n  });\n  const preloadRoute = useStableCallback(async (navigateOpts = state.location) => {\n    let next = buildLocation(navigateOpts);\n    let matches = matchRoutes(next.pathname, next.search, {\n      throwOnError: true\n    });\n    await loadMatches({\n      matches,\n      preload: true,\n      checkLatest: () => undefined\n    });\n    return [last(matches), matches];\n  });\n  const buildLink = useStableCallback(dest => {\n    // If this link simply reloads the current route,\n    // make sure it has a new key so it will trigger a data refresh\n\n    // If this `to` is a valid external URL, return\n    // null for LinkUtils\n\n    const {\n      to,\n      preload: userPreload,\n      preloadDelay: userPreloadDelay,\n      activeOptions,\n      disabled,\n      target,\n      replace,\n      resetScroll,\n      startTransition\n    } = dest;\n    try {\n      new URL(`${to}`);\n      return {\n        type: 'external',\n        href: to\n      };\n    } catch (e) {}\n    const nextOpts = dest;\n    const next = buildLocation(nextOpts);\n    const preload = userPreload ?? options.defaultPreload;\n    const preloadDelay = userPreloadDelay ?? options.defaultPreloadDelay ?? 0;\n\n    // Compare path/hash for matches\n    const currentPathSplit = latestLocationRef.current.pathname.split('/');\n    const nextPathSplit = next.pathname.split('/');\n    const pathIsFuzzyEqual = nextPathSplit.every((d, i) => d === currentPathSplit[i]);\n    // Combine the matches based on user options\n    const pathTest = activeOptions?.exact ? latestLocationRef.current.pathname === next.pathname : pathIsFuzzyEqual;\n    const hashTest = activeOptions?.includeHash ? latestLocationRef.current.hash === next.hash : true;\n    const searchTest = activeOptions?.includeSearch ?? true ? partialDeepEqual(latestLocationRef.current.search, next.search) : true;\n\n    // The final \"active\" test\n    const isActive = pathTest && hashTest && searchTest;\n\n    // The click handler\n    const handleClick = e => {\n      if (!disabled && !isCtrlEvent(e) && !e.defaultPrevented && (!target || target === '_self') && e.button === 0) {\n        e.preventDefault();\n\n        // All is well? Navigate!\n        commitLocation({\n          ...next,\n          replace,\n          resetScroll,\n          startTransition\n        });\n      }\n    };\n\n    // The click handler\n    const handleFocus = e => {\n      if (preload) {\n        preloadRoute(nextOpts).catch(err => {\n          console.warn(err);\n          console.warn(preloadWarning);\n        });\n      }\n    };\n    const handleTouchStart = e => {\n      preloadRoute(nextOpts).catch(err => {\n        console.warn(err);\n        console.warn(preloadWarning);\n      });\n    };\n    const handleEnter = e => {\n      const target = e.target || {};\n      if (preload) {\n        if (target.preloadTimeout) {\n          return;\n        }\n        target.preloadTimeout = setTimeout(() => {\n          target.preloadTimeout = null;\n          preloadRoute(nextOpts).catch(err => {\n            console.warn(err);\n            console.warn(preloadWarning);\n          });\n        }, preloadDelay);\n      }\n    };\n    const handleLeave = e => {\n      const target = e.target || {};\n      if (target.preloadTimeout) {\n        clearTimeout(target.preloadTimeout);\n        target.preloadTimeout = null;\n      }\n    };\n    return {\n      type: 'internal',\n      next,\n      handleFocus,\n      handleClick,\n      handleEnter,\n      handleLeave,\n      handleTouchStart,\n      isActive,\n      disabled\n    };\n  });\n  React.useLayoutEffect(() => {\n    const unsub = history.subscribe(() => {\n      latestLocationRef.current = parseLocation(latestLocationRef.current);\n      if (state.location !== latestLocationRef.current) {\n        startReactTransition(() => {\n          try {\n            load();\n          } catch (err) {\n            console.error(err);\n          }\n        });\n      }\n    });\n    const nextLocation = buildLocation({\n      search: true,\n      params: true,\n      hash: true,\n      state: true\n    });\n    if (state.location.href !== nextLocation.href) {\n      commitLocation({\n        ...nextLocation,\n        replace: true\n      });\n    }\n    return () => {\n      unsub();\n    };\n  }, [history]);\n  const initialLoad = React.useRef(true);\n  if (initialLoad.current) {\n    initialLoad.current = false;\n    startReactTransition(() => {\n      try {\n        load();\n      } catch (err) {\n        console.error(err);\n      }\n    });\n  }\n  const matchRoute = useStableCallback((location, opts) => {\n    location = {\n      ...location,\n      to: location.to ? resolvePathWithBase(location.from || '', location.to) : undefined\n    };\n    const next = buildLocation(location);\n    if (opts?.pending && state.status !== 'pending') {\n      return false;\n    }\n    const baseLocation = opts?.pending ? latestLocationRef.current : state.resolvedLocation;\n\n    // const baseLocation = state.resolvedLocation\n\n    if (!baseLocation) {\n      return false;\n    }\n    const match = matchPathname(basepath, baseLocation.pathname, {\n      ...opts,\n      to: next.pathname\n    });\n    if (!match) {\n      return false;\n    }\n    if (match && (opts?.includeSearch ?? true)) {\n      return partialDeepEqual(baseLocation.search, next.search) ? match : false;\n    }\n    return match;\n  });\n  const routerContextValue = {\n    routeTree: router.routeTree,\n    navigate,\n    buildLink,\n    state,\n    matchRoute,\n    routesById,\n    options,\n    history,\n    load,\n    buildLocation,\n    subscribe: router.subscribe,\n    resetNextScrollRef\n  };\n  return /*#__PURE__*/React.createElement(routerContext.Provider, {\n    value: routerContextValue\n  }, /*#__PURE__*/React.createElement(Matches, null));\n}\nfunction getRouteMatch(state, id) {\n  return [...state.pendingMatches, ...state.matches].find(d => d.id === id);\n}\nfunction useRouterState(opts) {\n  const {\n    state\n  } = useRouter();\n  // return useStore(router.__store, opts?.select as any)\n  return opts?.select ? opts.select(state) : state;\n}\nfunction useRouter() {\n  const resolvedContext = window.__TSR_ROUTER_CONTEXT__ || routerContext;\n  const value = React.useContext(resolvedContext);\n  warning(value, 'useRouter must be used inside a <RouterProvider> component!');\n  return value;\n}\n\nfunction Matches() {\n  const {\n    routesById,\n    state\n  } = useRouter();\n  const {\n    matches\n  } = state;\n  const locationKey = useRouterState().location.state.key;\n  const route = routesById[rootRouteId];\n  const errorComponent = React.useCallback(props => {\n    return /*#__PURE__*/React.createElement(ErrorComponent, {\n      ...props,\n      useMatch: route.useMatch,\n      useRouteContext: route.useRouteContext,\n      useSearch: route.useSearch,\n      useParams: route.useParams\n    });\n  }, [route]);\n  return /*#__PURE__*/React.createElement(matchesContext.Provider, {\n    value: matches\n  }, /*#__PURE__*/React.createElement(CatchBoundary, {\n    resetKey: locationKey,\n    errorComponent: errorComponent,\n    onCatch: () => {\n      warning(false, `Error in router! Consider setting an 'errorComponent' in your RootRoute! 👍`);\n    }\n  }, matches.length ? /*#__PURE__*/React.createElement(Match, {\n    matches: matches\n  }) : null));\n}\nconst defaultPending = () => null;\nfunction Match({\n  matches\n}) {\n  const {\n    options,\n    routesById\n  } = useRouter();\n  const match = matches[0];\n  const routeId = match?.routeId;\n  const route = routesById[routeId];\n  const locationKey = useRouterState().location.state?.key;\n  const PendingComponent = route.options.pendingComponent ?? options.defaultPendingComponent ?? defaultPending;\n  const routeErrorComponent = route.options.errorComponent ?? options.defaultErrorComponent ?? ErrorComponent;\n  const ResolvedSuspenseBoundary = route.options.wrapInSuspense ?? React.Suspense;\n  // const ResolvedSuspenseBoundary = SafeFragment\n\n  const errorComponent = React.useCallback(props => {\n    return /*#__PURE__*/React.createElement(routeErrorComponent, {\n      ...props,\n      useMatch: route.useMatch,\n      useRouteContext: route.useRouteContext,\n      useSearch: route.useSearch,\n      useParams: route.useParams\n    });\n  }, [route]);\n  return /*#__PURE__*/React.createElement(matchesContext.Provider, {\n    value: matches\n  }, /*#__PURE__*/React.createElement(ResolvedSuspenseBoundary, {\n    fallback: /*#__PURE__*/React.createElement(PendingComponent, {\n      useMatch: route.useMatch,\n      useRouteContext: route.useRouteContext,\n      useSearch: route.useSearch,\n      useParams: route.useParams\n    })\n  }, /*#__PURE__*/React.createElement(CatchBoundary, {\n    resetKey: locationKey,\n    errorComponent: errorComponent,\n    onCatch: () => {\n      warning(false, `Error in route match: ${match.id}`);\n    }\n  }, /*#__PURE__*/React.createElement(MatchInner, {\n    match: match\n  }))));\n}\nfunction MatchInner({\n  match\n}) {\n  const {\n    options,\n    routesById\n  } = useRouter();\n  const route = routesById[match.routeId];\n  if (match.status === 'error') {\n    throw match.error;\n  }\n  if (match.status === 'pending') {\n    throw match.loadPromise;\n  }\n  if (match.status === 'success') {\n    let comp = route.options.component ?? options.defaultComponent;\n    if (comp) {\n      return /*#__PURE__*/React.createElement(comp, {\n        useMatch: route.useMatch,\n        useRouteContext: route.useRouteContext,\n        useSearch: route.useSearch,\n        useParams: route.useParams\n      });\n    }\n    return /*#__PURE__*/React.createElement(Outlet, null);\n  }\n  invariant(false, 'Idle routeMatch status encountered during rendering! You should never see this. File an issue!');\n}\nfunction Outlet() {\n  const matches = React.useContext(matchesContext).slice(1);\n  if (!matches[0]) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(Match, {\n    matches: matches\n  });\n}\nfunction useMatchRoute() {\n  const {\n    matchRoute\n  } = useRouter();\n  return React.useCallback(opts => {\n    const {\n      pending,\n      caseSensitive,\n      ...rest\n    } = opts;\n    return matchRoute(rest, {\n      pending,\n      caseSensitive\n    });\n  }, []);\n}\nfunction MatchRoute(props) {\n  const matchRoute = useMatchRoute();\n  const params = matchRoute(props);\n  if (typeof props.children === 'function') {\n    return props.children(params);\n  }\n  return !!params ? props.children : null;\n}\nfunction useMatch(opts) {\n  const nearestMatch = React.useContext(matchesContext)[0];\n  const nearestMatchRouteId = nearestMatch?.routeId;\n  const matchRouteId = useRouterState({\n    select: state => {\n      const match = opts?.from ? state.matches.find(d => d.routeId === opts?.from) : state.matches.find(d => d.id === nearestMatch.id);\n      return match.routeId;\n    }\n  });\n  if (opts?.strict ?? true) {\n    invariant(nearestMatchRouteId == matchRouteId, `useMatch(\"${matchRouteId}\") is being called in a component that is meant to render the '${nearestMatchRouteId}' route. Did you mean to 'useMatch(\"${matchRouteId}\", { strict: false })' or 'useRoute(\"${matchRouteId}\")' instead?`);\n  }\n  const matchSelection = useRouterState({\n    select: state => {\n      const match = opts?.from ? state.matches.find(d => d.routeId === opts?.from) : state.matches.find(d => d.id === nearestMatch.id);\n      invariant(match, `Could not find ${opts?.from ? `an active match from \"${opts.from}\"` : 'a nearest match!'}`);\n      return opts?.select ? opts.select(match) : match;\n    }\n  });\n  return matchSelection;\n}\nconst matchesContext = /*#__PURE__*/React.createContext(null);\nfunction useMatches(opts) {\n  const contextMatches = React.useContext(matchesContext);\n  return useRouterState({\n    select: state => {\n      const matches = state.matches.slice(state.matches.findIndex(d => d.id === contextMatches[0]?.id));\n      return opts?.select ? opts.select(matches) : matches;\n    }\n  });\n}\n\nfunction useParams(opts) {\n  return useRouterState({\n    select: state => {\n      const params = last(state.matches)?.params;\n      return opts?.select ? opts.select(params) : params;\n    }\n  });\n}\n\nfunction useSearch(opts) {\n  return useMatch({\n    ...opts,\n    select: match => {\n      return opts?.select ? opts.select(match.search) : match.search;\n    }\n  });\n}\n\nconst rootRouteId = '__root__';\n\n// The parse type here allows a zod schema to be passed directly to the validator\n\nclass Route {\n  // Set up in this.init()\n\n  // customId!: TCustomId\n\n  // Optional\n\n  constructor(options) {\n    this.options = options || {};\n    this.isRoot = !options?.getParentRoute;\n    Route.__onInit(this);\n  }\n  init = opts => {\n    this.originalIndex = opts.originalIndex;\n    const options = this.options;\n    const isRoot = !options?.path && !options?.id;\n    this.parentRoute = this.options?.getParentRoute?.();\n    if (isRoot) {\n      this.path = rootRouteId;\n    } else {\n      invariant(this.parentRoute, `Child Route instances must pass a 'getParentRoute: () => ParentRoute' option that returns a Route instance.`);\n    }\n    let path = isRoot ? rootRouteId : options.path;\n\n    // If the path is anything other than an index path, trim it up\n    if (path && path !== '/') {\n      path = trimPath(path);\n    }\n    const customId = options?.id || path;\n\n    // Strip the parentId prefix from the first level of children\n    let id = isRoot ? rootRouteId : joinPaths([this.parentRoute.id === rootRouteId ? '' : this.parentRoute.id, customId]);\n    if (path === rootRouteId) {\n      path = '/';\n    }\n    if (id !== rootRouteId) {\n      id = joinPaths(['/', id]);\n    }\n    const fullPath = id === rootRouteId ? '/' : joinPaths([this.parentRoute.fullPath, path]);\n    this.path = path;\n    this.id = id;\n    // this.customId = customId as TCustomId\n    this.fullPath = fullPath;\n    this.to = fullPath;\n  };\n  addChildren = children => {\n    this.children = children;\n    return this;\n  };\n  update = options => {\n    Object.assign(this.options, options);\n    return this;\n  };\n  static __onInit = route => {\n    // This is a dummy static method that should get\n    // replaced by a framework specific implementation if necessary\n  };\n  useMatch = opts => {\n    return useMatch({\n      ...opts,\n      from: this.id\n    });\n  };\n  useRouteContext = opts => {\n    return useMatch({\n      ...opts,\n      from: this.id,\n      select: d => opts?.select ? opts.select(d.context) : d.context\n    });\n  };\n  useSearch = opts => {\n    return useSearch({\n      ...opts,\n      from: this.id\n    });\n  };\n  useParams = opts => {\n    return useParams({\n      ...opts,\n      from: this.id\n    });\n  };\n}\nfunction rootRouteWithContext() {\n  return options => {\n    return new RootRoute(options);\n  };\n}\nclass RootRoute extends Route {\n  constructor(options) {\n    super(options);\n  }\n}\nfunction createRouteMask(opts) {\n  return opts;\n}\n\n//\n\nclass FileRoute {\n  constructor(path) {\n    this.path = path;\n  }\n  createRoute = options => {\n    const route = new Route(options);\n    route.isRoot = false;\n    return route;\n  };\n}\n\nfunction lazyRouteComponent(importer, exportName) {\n  let loadPromise;\n  const load = () => {\n    if (!loadPromise) {\n      loadPromise = importer();\n    }\n    return loadPromise;\n  };\n  const lazyComp = /*#__PURE__*/React.lazy(async () => {\n    const moduleExports = await load();\n    const comp = moduleExports[exportName ?? 'default'];\n    return {\n      default: comp\n    };\n  });\n  lazyComp.preload = load;\n  return lazyComp;\n}\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction useLinkProps(options) {\n  const {\n    buildLink\n  } = useRouter();\n  const match = useMatch({\n    strict: false\n  });\n  const {\n    // custom props\n    type,\n    children,\n    target,\n    activeProps = () => ({\n      className: 'active'\n    }),\n    inactiveProps = () => ({}),\n    activeOptions,\n    disabled,\n    hash,\n    search,\n    params,\n    to,\n    state,\n    mask,\n    preload,\n    preloadDelay,\n    replace,\n    startTransition,\n    resetScroll,\n    // element props\n    style,\n    className,\n    onClick,\n    onFocus,\n    onMouseEnter,\n    onMouseLeave,\n    onTouchStart,\n    ...rest\n  } = options;\n  const linkInfo = buildLink({\n    from: options.to ? match.pathname : undefined,\n    ...options\n  });\n  if (linkInfo.type === 'external') {\n    const {\n      href\n    } = linkInfo;\n    return {\n      href\n    };\n  }\n  const {\n    handleClick,\n    handleFocus,\n    handleEnter,\n    handleLeave,\n    handleTouchStart,\n    isActive,\n    next\n  } = linkInfo;\n  const composeHandlers = handlers => e => {\n    if (e.persist) e.persist();\n    handlers.filter(Boolean).forEach(handler => {\n      if (e.defaultPrevented) return;\n      handler(e);\n    });\n  };\n\n  // Get the active props\n  const resolvedActiveProps = isActive ? functionalUpdate(activeProps, {}) ?? {} : {};\n\n  // Get the inactive props\n  const resolvedInactiveProps = isActive ? {} : functionalUpdate(inactiveProps, {}) ?? {};\n  return {\n    ...resolvedActiveProps,\n    ...resolvedInactiveProps,\n    ...rest,\n    href: disabled ? undefined : next.maskedLocation ? next.maskedLocation.href : next.href,\n    onClick: composeHandlers([onClick, handleClick]),\n    onFocus: composeHandlers([onFocus, handleFocus]),\n    onMouseEnter: composeHandlers([onMouseEnter, handleEnter]),\n    onMouseLeave: composeHandlers([onMouseLeave, handleLeave]),\n    onTouchStart: composeHandlers([onTouchStart, handleTouchStart]),\n    target,\n    style: {\n      ...style,\n      ...resolvedActiveProps.style,\n      ...resolvedInactiveProps.style\n    },\n    className: [className, resolvedActiveProps.className, resolvedInactiveProps.className].filter(Boolean).join(' ') || undefined,\n    ...(disabled ? {\n      role: 'link',\n      'aria-disabled': true\n    } : undefined),\n    ['data-status']: isActive ? 'active' : undefined\n  };\n}\nconst Link = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const linkProps = useLinkProps(props);\n  return /*#__PURE__*/React.createElement(\"a\", _extends({\n    ref: ref\n  }, linkProps, {\n    children: typeof props.children === 'function' ? props.children({\n      isActive: linkProps['data-status'] === 'active'\n    }) : props.children\n  }));\n});\n\nconst useLayoutEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nconst windowKey = 'window';\nconst delimiter = '___';\nlet weakScrolledElements = new WeakSet();\nlet cache;\nconst sessionsStorage = typeof window !== 'undefined' && window.sessionStorage;\nconst defaultGetKey = location => location.state.key;\nfunction useScrollRestoration(options) {\n  const {\n    state,\n    subscribe,\n    resetNextScrollRef\n  } = useRouter();\n  useLayoutEffect(() => {\n    const getKey = options?.getKey || defaultGetKey;\n    if (sessionsStorage) {\n      if (!cache) {\n        cache = (() => {\n          const storageKey = 'tsr-scroll-restoration-v2';\n          const state = JSON.parse(window.sessionStorage.getItem(storageKey) || 'null') || {\n            cached: {},\n            next: {}\n          };\n          return {\n            state,\n            set: updater => {\n              cache.state = functionalUpdate(updater, cache.state);\n              window.sessionStorage.setItem(storageKey, JSON.stringify(cache.state));\n            }\n          };\n        })();\n      }\n    }\n    const {\n      history\n    } = window;\n    if (history.scrollRestoration) {\n      history.scrollRestoration = 'manual';\n    }\n    const onScroll = event => {\n      if (weakScrolledElements.has(event.target)) return;\n      weakScrolledElements.add(event.target);\n      const elementSelector = event.target === document || event.target === window ? windowKey : getCssSelector(event.target);\n      if (!cache.state.next[elementSelector]) {\n        cache.set(c => ({\n          ...c,\n          next: {\n            ...c.next,\n            [elementSelector]: {\n              scrollX: NaN,\n              scrollY: NaN\n            }\n          }\n        }));\n      }\n    };\n    const getCssSelector = el => {\n      let path = [],\n        parent;\n      while (parent = el.parentNode) {\n        path.unshift(`${el.tagName}:nth-child(${[].indexOf.call(parent.children, el) + 1})`);\n        el = parent;\n      }\n      return `${path.join(' > ')}`.toLowerCase();\n    };\n    if (typeof document !== 'undefined') {\n      document.addEventListener('scroll', onScroll, true);\n    }\n    const unsubOnBeforeLoad = subscribe('onBeforeLoad', event => {\n      if (event.pathChanged) {\n        const restoreKey = getKey(event.fromLocation);\n        for (const elementSelector in cache.state.next) {\n          const entry = cache.state.next[elementSelector];\n          if (elementSelector === windowKey) {\n            entry.scrollX = window.scrollX || 0;\n            entry.scrollY = window.scrollY || 0;\n          } else if (elementSelector) {\n            const element = document.querySelector(elementSelector);\n            entry.scrollX = element?.scrollLeft || 0;\n            entry.scrollY = element?.scrollTop || 0;\n          }\n          cache.set(c => {\n            const next = {\n              ...c.next\n            };\n            delete next[elementSelector];\n            return {\n              ...c,\n              next,\n              cached: {\n                ...c.cached,\n                [[restoreKey, elementSelector].join(delimiter)]: entry\n              }\n            };\n          });\n        }\n      }\n    });\n    const unsubOnResolved = subscribe('onResolved', event => {\n      if (event.pathChanged) {\n        if (!resetNextScrollRef.current) {\n          return;\n        }\n        resetNextScrollRef.current = true;\n        const getKey = options?.getKey || defaultGetKey;\n        const restoreKey = getKey(event.toLocation);\n        let windowRestored = false;\n        for (const cacheKey in cache.state.cached) {\n          const entry = cache.state.cached[cacheKey];\n          const [key, elementSelector] = cacheKey.split(delimiter);\n          if (key === restoreKey) {\n            if (elementSelector === windowKey) {\n              windowRestored = true;\n              window.scrollTo(entry.scrollX, entry.scrollY);\n            } else if (elementSelector) {\n              const element = document.querySelector(elementSelector);\n              if (element) {\n                element.scrollLeft = entry.scrollX;\n                element.scrollTop = entry.scrollY;\n              }\n            }\n          }\n        }\n        if (!windowRestored) {\n          window.scrollTo(0, 0);\n        }\n        cache.set(c => ({\n          ...c,\n          next: {}\n        }));\n        weakScrolledElements = new WeakSet();\n      }\n    });\n    return () => {\n      document.removeEventListener('scroll', onScroll);\n      unsubOnBeforeLoad();\n      unsubOnResolved();\n    };\n  }, []);\n}\nfunction ScrollRestoration(props) {\n  useScrollRestoration(props);\n  return null;\n}\n\nfunction useBlocker(message, condition = true) {\n  const {\n    history\n  } = useRouter();\n  React.useEffect(() => {\n    if (!condition) return;\n    let unblock = history.block((retry, cancel) => {\n      if (window.confirm(message)) {\n        unblock();\n        retry();\n      }\n    });\n    return unblock;\n  });\n}\nfunction Block({\n  message,\n  condition,\n  children\n}) {\n  useBlocker(message, condition);\n  return children ?? null;\n}\n\nfunction useNavigate(defaultOpts) {\n  const {\n    navigate\n  } = useRouter();\n  const match = useMatch({\n    strict: false\n  });\n  return React.useCallback(opts => {\n    return navigate({\n      from: opts?.to ? match.pathname : undefined,\n      ...defaultOpts,\n      ...opts\n    });\n  }, []);\n}\nfunction typedNavigate(navigate) {\n  return navigate;\n} //\n\nfunction Navigate(props) {\n  const {\n    navigate\n  } = useRouter();\n  const match = useMatch({\n    strict: false\n  });\n  useLayoutEffect$1(() => {\n    navigate({\n      from: props.to ? match.pathname : undefined,\n      ...props\n    });\n  }, []);\n  return null;\n}\n\nexport { Block, CatchBoundary, CatchBoundaryImpl, ErrorComponent, FileRoute, Link, Match, MatchRoute, Matches, Navigate, Outlet, PathParamError, RootRoute, Route, Router, RouterProvider, ScrollRestoration, SearchParamError, cleanPath, componentTypes, createRouteMask, decode, defaultParseSearch, defaultStringifySearch, encode, functionalUpdate, getInitialRouterState, getRouteMatch, interpolatePath, isPlainObject, isRedirect, isServer, joinPaths, last, lazyFn, lazyRouteComponent, matchByPath, matchPathname, matchesContext, parsePathname, parseSearchWith, partialDeepEqual, pick, redirect, replaceEqualDeep, resolvePath, rootRouteId, rootRouteWithContext, routerContext, shallow, stringifySearchWith, trimPath, trimPathLeft, trimPathRight, typedNavigate, useBlocker, useLayoutEffect$1 as useLayoutEffect, useLinkProps, useMatch, useMatchRoute, useMatches, useNavigate, useParams, useRouteContext, useRouter, useRouterState, useScrollRestoration, useSearch, useStableCallback };\n//# sourceMappingURL=index.js.map\n","import React from 'react'\n\nconst getItem = (key: string): unknown => {\n  try {\n    const itemValue = localStorage.getItem(key)\n    if (typeof itemValue === 'string') {\n      return JSON.parse(itemValue)\n    }\n    return undefined\n  } catch {\n    return undefined\n  }\n}\n\nexport default function useLocalStorage<T>(\n  key: string,\n  defaultValue: T | undefined,\n): [T | undefined, (newVal: T | ((prevVal: T) => T)) => void] {\n  const [value, setValue] = React.useState<T>()\n\n  React.useEffect(() => {\n    const initialValue = getItem(key) as T | undefined\n\n    if (typeof initialValue === 'undefined' || initialValue === null) {\n      setValue(\n        typeof defaultValue === 'function' ? defaultValue() : defaultValue,\n      )\n    } else {\n      setValue(initialValue)\n    }\n  }, [defaultValue, key])\n\n  const setter = React.useCallback(\n    (updater: any) => {\n      setValue((old) => {\n        let newVal = updater\n\n        if (typeof updater == 'function') {\n          newVal = updater(old)\n        }\n        try {\n          localStorage.setItem(key, JSON.stringify(newVal))\n        } catch {}\n\n        return newVal\n      })\n    },\n    [key],\n  )\n\n  return [value, setter]\n}\n","import React from 'react'\n\nexport const defaultTheme = {\n  background: '#0b1521',\n  backgroundAlt: '#132337',\n  foreground: 'white',\n  gray: '#3f4e60',\n  grayAlt: '#222e3e',\n  inputBackgroundColor: '#fff',\n  inputTextColor: '#000',\n  success: '#00ab52',\n  danger: '#ff0085',\n  active: '#006bff',\n  warning: '#ffb200',\n} as const\n\nexport type Theme = typeof defaultTheme\ninterface ProviderProps {\n  theme: Theme\n  children?: React.ReactNode\n}\n\nconst ThemeContext = React.createContext(defaultTheme)\n\nexport function ThemeProvider({ theme, ...rest }: ProviderProps) {\n  return <ThemeContext.Provider value={theme} {...rest} />\n}\n\nexport function useTheme() {\n  return React.useContext(ThemeContext)\n}\n","import React from 'react'\n\nexport default function useMediaQuery(query: string): boolean | undefined {\n  // Keep track of the preference in state, start with the current match\n  const [isMatch, setIsMatch] = React.useState(() => {\n    if (typeof window !== 'undefined') {\n      return window.matchMedia && window.matchMedia(query).matches\n    }\n    return\n  })\n\n  // Watch for changes\n  React.useEffect(() => {\n    if (typeof window !== 'undefined') {\n      if (!window.matchMedia) {\n        return\n      }\n\n      // Create a matcher\n      const matcher = window.matchMedia(query)\n\n      // Create our handler\n      const onChange = ({ matches }: { matches: boolean }) =>\n        setIsMatch(matches)\n\n      // Listen for changes\n      matcher.addListener(onChange)\n\n      return () => {\n        // Stop listening for changes\n        matcher.removeListener(onChange)\n      }\n    }\n\n    return\n  }, [isMatch, query, setIsMatch])\n\n  return isMatch\n}\n","import React from 'react'\nimport { AnyRootRoute, AnyRoute, AnyRouteMatch } from '@tanstack/react-router'\n\nimport { Theme, useTheme } from './theme'\nimport useMediaQuery from './useMediaQuery'\n\nexport const isServer = typeof window === 'undefined'\n\ntype StyledComponent<T> = T extends 'button'\n  ? React.DetailedHTMLProps<\n      React.ButtonHTMLAttributes<HTMLButtonElement>,\n      HTMLButtonElement\n    >\n  : T extends 'input'\n  ? React.DetailedHTMLProps<\n      React.InputHTMLAttributes<HTMLInputElement>,\n      HTMLInputElement\n    >\n  : T extends 'select'\n  ? React.DetailedHTMLProps<\n      React.SelectHTMLAttributes<HTMLSelectElement>,\n      HTMLSelectElement\n    >\n  : T extends keyof HTMLElementTagNameMap\n  ? React.HTMLAttributes<HTMLElementTagNameMap[T]>\n  : never\n\nexport function getStatusColor(match: AnyRouteMatch, theme: Theme) {\n  return match.status === 'pending' || match.isFetching\n    ? theme.active\n    : match.status === 'error'\n    ? theme.danger\n    : match.status === 'success'\n    ? theme.success\n    : theme.gray\n}\n\nexport function getRouteStatusColor(\n  matches: AnyRouteMatch[],\n  route: AnyRoute | AnyRootRoute,\n  theme: Theme,\n) {\n  const found = matches.find((d) => d.routeId === route.id)\n  if (!found) return theme.gray\n  return getStatusColor(found, theme)\n}\n\ntype Styles =\n  | React.CSSProperties\n  | ((props: Record<string, any>, theme: Theme) => React.CSSProperties)\n\nexport function styled<T extends keyof HTMLElementTagNameMap>(\n  type: T,\n  newStyles: Styles,\n  queries: Record<string, Styles> = {},\n) {\n  return React.forwardRef<HTMLElementTagNameMap[T], StyledComponent<T>>(\n    ({ style, ...rest }, ref) => {\n      const theme = useTheme()\n\n      const mediaStyles = Object.entries(queries).reduce(\n        (current, [key, value]) => {\n          // eslint-disable-next-line react-hooks/rules-of-hooks\n          return useMediaQuery(key)\n            ? {\n                ...current,\n                ...(typeof value === 'function' ? value(rest, theme) : value),\n              }\n            : current\n        },\n        {},\n      )\n\n      return React.createElement(type, {\n        ...rest,\n        style: {\n          ...(typeof newStyles === 'function'\n            ? newStyles(rest, theme)\n            : newStyles),\n          ...style,\n          ...mediaStyles,\n        },\n        ref,\n      })\n    },\n  )\n}\n\nexport function useIsMounted() {\n  const mountedRef = React.useRef(false)\n  const isMounted = React.useCallback(() => mountedRef.current, [])\n\n  React[isServer ? 'useEffect' : 'useLayoutEffect'](() => {\n    mountedRef.current = true\n    return () => {\n      mountedRef.current = false\n    }\n  }, [])\n\n  return isMounted\n}\n\n/**\n * Displays a string regardless the type of the data\n * @param {unknown} value Value to be stringified\n */\nexport const displayValue = (value: unknown) => {\n  const name = Object.getOwnPropertyNames(Object(value))\n  const newValue = typeof value === 'bigint' ? `${value.toString()}n` : value\n\n  return JSON.stringify(newValue, name)\n}\n\n/**\n * This hook is a safe useState version which schedules state updates in microtasks\n * to prevent updating a component state while React is rendering different components\n * or when the component is not mounted anymore.\n */\nexport function useSafeState<T>(initialState: T): [T, (value: T) => void] {\n  const isMounted = useIsMounted()\n  const [state, setState] = React.useState(initialState)\n\n  const safeSetState = React.useCallback(\n    (value: T) => {\n      scheduleMicrotask(() => {\n        if (isMounted()) {\n          setState(value)\n        }\n      })\n    },\n    [isMounted],\n  )\n\n  return [state, safeSetState]\n}\n\n/**\n * Schedules a microtask.\n * This can be useful to schedule state updates after rendering.\n */\nfunction scheduleMicrotask(callback: () => void) {\n  Promise.resolve()\n    .then(callback)\n    .catch((error) =>\n      setTimeout(() => {\n        throw error\n      }),\n    )\n}\n\nexport function multiSortBy<T>(\n  arr: T[],\n  accessors: ((item: T) => any)[] = [(d) => d],\n): T[] {\n  return arr\n    .map((d, i) => [d, i] as const)\n    .sort(([a, ai], [b, bi]) => {\n      for (const accessor of accessors) {\n        const ao = accessor(a)\n        const bo = accessor(b)\n\n        if (typeof ao === 'undefined') {\n          if (typeof bo === 'undefined') {\n            continue\n          }\n          return 1\n        }\n\n        if (ao === bo) {\n          continue\n        }\n\n        return ao > bo ? 1 : -1\n      }\n\n      return ai - bi\n    })\n    .map(([d]) => d)\n}\n","import { styled } from './utils'\n\nexport const Panel = styled(\n  'div',\n  (_props, theme) => ({\n    fontSize: 'clamp(12px, 1.5vw, 14px)',\n    fontFamily: `sans-serif`,\n    display: 'flex',\n    backgroundColor: theme.background,\n    color: theme.foreground,\n  }),\n  {\n    '(max-width: 700px)': {\n      flexDirection: 'column',\n    },\n    '(max-width: 600px)': {\n      fontSize: '.9em',\n      // flexDirection: 'column',\n    },\n  },\n)\n\nexport const ActivePanel = styled(\n  'div',\n  () => ({\n    flex: '1 1 500px',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'auto',\n    height: '100%',\n  }),\n  {\n    '(max-width: 700px)': (_props, theme) => ({\n      borderTop: `2px solid ${theme.gray}`,\n    }),\n  },\n)\n\nexport const Button = styled('button', (props, theme) => ({\n  appearance: 'none',\n  fontSize: '.9em',\n  fontWeight: 'bold',\n  background: theme.gray,\n  border: '0',\n  borderRadius: '.3em',\n  color: 'white',\n  padding: '.5em',\n  opacity: props.disabled ? '.5' : undefined,\n  cursor: 'pointer',\n}))\n\n// export const QueryKeys = styled('span', {\n//   display: 'inline-block',\n//   fontSize: '0.9em',\n// })\n\n// export const QueryKey = styled('span', {\n//   display: 'inline-flex',\n//   alignItems: 'center',\n//   padding: '.2em .4em',\n//   fontWeight: 'bold',\n//   textShadow: '0 0 10px black',\n//   borderRadius: '.2em',\n// })\n\nexport const Code = styled('code', {\n  fontSize: '.9em',\n})\n\nexport const Input = styled('input', (_props, theme) => ({\n  backgroundColor: theme.inputBackgroundColor,\n  border: 0,\n  borderRadius: '.2em',\n  color: theme.inputTextColor,\n  fontSize: '.9em',\n  lineHeight: `1.3`,\n  padding: '.3em .4em',\n}))\n\nexport const Select = styled(\n  'select',\n  (_props, theme) => ({\n    display: `inline-block`,\n    fontSize: `.9em`,\n    fontFamily: `sans-serif`,\n    fontWeight: 'normal',\n    lineHeight: `1.3`,\n    padding: `.3em 1.5em .3em .5em`,\n    height: 'auto',\n    border: 0,\n    borderRadius: `.2em`,\n    appearance: `none`,\n    WebkitAppearance: 'none',\n    backgroundColor: theme.inputBackgroundColor,\n    backgroundImage: `url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100' height='100' fill='%23444444'><polygon points='0,25 100,25 50,75'/></svg>\")`,\n    backgroundRepeat: `no-repeat`,\n    backgroundPosition: `right .55em center`,\n    backgroundSize: `.65em auto, 100%`,\n    color: theme.inputTextColor,\n  }),\n  {\n    '(max-width: 500px)': {\n      display: 'none',\n    },\n  },\n)\n","import * as React from 'react'\n\nimport { displayValue, styled } from './utils'\n\nexport const Entry = styled('div', {\n  fontFamily: 'Menlo, monospace',\n  fontSize: '.7rem',\n  lineHeight: '1.7',\n  outline: 'none',\n  wordBreak: 'break-word',\n})\n\nexport const Label = styled('span', {\n  color: 'white',\n})\n\nexport const LabelButton = styled('button', {\n  cursor: 'pointer',\n  color: 'white',\n})\n\nexport const ExpandButton = styled('button', {\n  cursor: 'pointer',\n  color: 'inherit',\n  font: 'inherit',\n  outline: 'inherit',\n  background: 'transparent',\n  border: 'none',\n  padding: 0,\n})\n\nexport const Value = styled('span', (_props, theme) => ({\n  color: theme.danger,\n}))\n\nexport const SubEntries = styled('div', {\n  marginLeft: '.1em',\n  paddingLeft: '1em',\n  borderLeft: '2px solid rgba(0,0,0,.15)',\n})\n\nexport const Info = styled('span', {\n  color: 'grey',\n  fontSize: '.7em',\n})\n\ntype ExpanderProps = {\n  expanded: boolean\n  style?: React.CSSProperties\n}\n\nexport const Expander = ({ expanded, style = {} }: ExpanderProps) => (\n  <span\n    style={{\n      display: 'inline-block',\n      transition: 'all .1s ease',\n      transform: `rotate(${expanded ? 90 : 0}deg) ${style.transform || ''}`,\n      ...style,\n    }}\n  >\n    ▶\n  </span>\n)\n\ntype Entry = {\n  label: string\n}\n\ntype RendererProps = {\n  handleEntry: HandleEntryFn\n  label?: React.ReactNode\n  value: unknown\n  subEntries: Entry[]\n  subEntryPages: Entry[][]\n  type: string\n  expanded: boolean\n  toggleExpanded: () => void\n  pageSize: number\n  renderer?: Renderer\n  filterSubEntries?: (subEntries: Property[]) => Property[]\n}\n\n/**\n * Chunk elements in the array by size\n *\n * when the array cannot be chunked evenly by size, the last chunk will be\n * filled with the remaining elements\n *\n * @example\n * chunkArray(['a','b', 'c', 'd', 'e'], 2) // returns [['a','b'], ['c', 'd'], ['e']]\n */\nexport function chunkArray<T>(array: T[], size: number): T[][] {\n  if (size < 1) return []\n  let i = 0\n  const result: T[][] = []\n  while (i < array.length) {\n    result.push(array.slice(i, i + size))\n    i = i + size\n  }\n  return result\n}\n\ntype Renderer = (props: RendererProps) => JSX.Element\n\nexport const DefaultRenderer: Renderer = ({\n  handleEntry,\n  label,\n  value,\n  subEntries = [],\n  subEntryPages = [],\n  type,\n  expanded = false,\n  toggleExpanded,\n  pageSize,\n  renderer,\n}) => {\n  const [expandedPages, setExpandedPages] = React.useState<number[]>([])\n  const [valueSnapshot, setValueSnapshot] = React.useState(undefined)\n\n  const refreshValueSnapshot = () => {\n    setValueSnapshot((value as () => any)())\n  }\n\n  return (\n    <Entry>\n      {subEntryPages.length ? (\n        <>\n          <ExpandButton onClick={() => toggleExpanded()}>\n            <Expander expanded={expanded} /> {label}{' '}\n            <Info>\n              {String(type).toLowerCase() === 'iterable' ? '(Iterable) ' : ''}\n              {subEntries.length} {subEntries.length > 1 ? `items` : `item`}\n            </Info>\n          </ExpandButton>\n          {expanded ? (\n            subEntryPages.length === 1 ? (\n              <SubEntries>\n                {subEntries.map((entry, index) => handleEntry(entry))}\n              </SubEntries>\n            ) : (\n              <SubEntries>\n                {subEntryPages.map((entries, index) => (\n                  <div key={index}>\n                    <Entry>\n                      <LabelButton\n                        onClick={() =>\n                          setExpandedPages((old) =>\n                            old.includes(index)\n                              ? old.filter((d) => d !== index)\n                              : [...old, index],\n                          )\n                        }\n                      >\n                        <Expander expanded={expanded} /> [{index * pageSize} ...{' '}\n                        {index * pageSize + pageSize - 1}]\n                      </LabelButton>\n                      {expandedPages.includes(index) ? (\n                        <SubEntries>\n                          {entries.map((entry) => handleEntry(entry))}\n                        </SubEntries>\n                      ) : null}\n                    </Entry>\n                  </div>\n                ))}\n              </SubEntries>\n            )\n          ) : null}\n        </>\n      ) : type === 'function' ? (\n        <>\n          <Explorer\n            renderer={renderer}\n            label={\n              <button\n                onClick={refreshValueSnapshot}\n                style={{\n                  appearance: 'none',\n                  border: '0',\n                  background: 'transparent',\n                }}\n              >\n                <Label>{label}</Label> 🔄{' '}\n              </button>\n            }\n            value={valueSnapshot}\n            defaultExpanded={{}}\n          />\n        </>\n      ) : (\n        <>\n          <Label>{label}:</Label> <Value>{displayValue(value)}</Value>\n        </>\n      )}\n    </Entry>\n  )\n}\n\ntype HandleEntryFn = (entry: Entry) => JSX.Element\n\ntype ExplorerProps = Partial<RendererProps> & {\n  renderer?: Renderer\n  defaultExpanded?: true | Record<string, boolean>\n}\n\ntype Property = {\n  defaultExpanded?: boolean | Record<string, boolean>\n  label: string\n  value: unknown\n}\n\nfunction isIterable(x: any): x is Iterable<unknown> {\n  return Symbol.iterator in x\n}\n\nexport default function Explorer({\n  value,\n  defaultExpanded,\n  renderer = DefaultRenderer,\n  pageSize = 100,\n  filterSubEntries,\n  ...rest\n}: ExplorerProps) {\n  const [expanded, setExpanded] = React.useState(Boolean(defaultExpanded))\n  const toggleExpanded = React.useCallback(() => setExpanded((old) => !old), [])\n\n  let type: string = typeof value\n  let subEntries: Property[] = []\n\n  const makeProperty = (sub: { label: string; value: unknown }): Property => {\n    const subDefaultExpanded =\n      defaultExpanded === true\n        ? { [sub.label]: true }\n        : defaultExpanded?.[sub.label]\n    return {\n      ...sub,\n      defaultExpanded: subDefaultExpanded,\n    }\n  }\n\n  if (Array.isArray(value)) {\n    type = 'array'\n    subEntries = value.map((d, i) =>\n      makeProperty({\n        label: i.toString(),\n        value: d,\n      }),\n    )\n  } else if (\n    value !== null &&\n    typeof value === 'object' &&\n    isIterable(value) &&\n    typeof value[Symbol.iterator] === 'function'\n  ) {\n    type = 'Iterable'\n    subEntries = Array.from(value, (val, i) =>\n      makeProperty({\n        label: i.toString(),\n        value: val,\n      }),\n    )\n  } else if (typeof value === 'object' && value !== null) {\n    type = 'object'\n    subEntries = Object.entries(value).map(([key, val]) =>\n      makeProperty({\n        label: key,\n        value: val,\n      }),\n    )\n  }\n\n  subEntries = filterSubEntries ? filterSubEntries(subEntries) : subEntries\n\n  const subEntryPages = chunkArray(subEntries, pageSize)\n\n  return renderer({\n    handleEntry: (entry) => (\n      <Explorer\n        key={entry.label}\n        value={value}\n        renderer={renderer}\n        filterSubEntries={filterSubEntries}\n        {...rest}\n        {...entry}\n      />\n    ),\n    type,\n    subEntries,\n    subEntryPages,\n    value,\n    expanded,\n    toggleExpanded,\n    pageSize,\n    ...rest,\n  })\n}\n","import React from 'react'\nimport {\n  invariant,\n  AnyRouter,\n  Route,\n  AnyRoute,\n  AnyRootRoute,\n  trimPath,\n  useRouter,\n} from '@tanstack/react-router'\n\nimport useLocalStorage from './useLocalStorage'\nimport {\n  getRouteStatusColor,\n  getStatusColor,\n  useIsMounted,\n  useSafeState,\n} from './utils'\nimport { Panel, Button, Code, ActivePanel } from './styledComponents'\nimport { ThemeProvider, defaultTheme as theme } from './theme'\n// import { getQueryStatusLabel, getQueryStatusColor } from './utils'\nimport Explorer from './Explorer'\n\nexport type PartialKeys<T, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>\n\ninterface DevtoolsOptions {\n  /**\n   * Set this true if you want the dev tools to default to being open\n   */\n  initialIsOpen?: boolean\n  /**\n   * Use this to add props to the panel. For example, you can add className, style (merge and override default style), etc.\n   */\n  panelProps?: React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLDivElement>,\n    HTMLDivElement\n  >\n  /**\n   * Use this to add props to the close button. For example, you can add className, style (merge and override default style), onClick (extend default handler), etc.\n   */\n  closeButtonProps?: React.DetailedHTMLProps<\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n  >\n  /**\n   * Use this to add props to the toggle button. For example, you can add className, style (merge and override default style), onClick (extend default handler), etc.\n   */\n  toggleButtonProps?: React.DetailedHTMLProps<\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n  >\n  /**\n   * The position of the TanStack Router logo to open and close the devtools panel.\n   * Defaults to 'bottom-left'.\n   */\n  position?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right'\n  /**\n   * Use this to render the devtools inside a different type of container element for a11y purposes.\n   * Any string which corresponds to a valid intrinsic JSX element is allowed.\n   * Defaults to 'footer'.\n   */\n  containerElement?: string | any\n  /**\n   * A boolean variable indicating if the \"lite\" version of the library is being used\n   */\n  router?: AnyRouter\n}\n\ninterface DevtoolsPanelOptions {\n  /**\n   * The standard React style object used to style a component with inline styles\n   */\n  style?: React.CSSProperties\n  /**\n   * The standard React className property used to style a component with classes\n   */\n  className?: string\n  /**\n   * A boolean variable indicating whether the panel is open or closed\n   */\n  isOpen?: boolean\n  /**\n   * A function that toggles the open and close state of the panel\n   */\n  setIsOpen: (isOpen: boolean) => void\n  /**\n   * Handles the opening and closing the devtools panel\n   */\n  handleDragStart: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void\n  /**\n   * A boolean variable indicating if the \"lite\" version of the library is being used\n   */\n  router?: AnyRouter\n}\n\nconst isServer = typeof window === 'undefined'\n\nfunction Logo(props: React.HTMLProps<HTMLDivElement>) {\n  return (\n    <div\n      {...props}\n      style={{\n        ...(props.style ?? {}),\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        fontSize: '0.8rem',\n        fontWeight: 'bolder',\n        lineHeight: '1',\n      }}\n    >\n      <div\n        style={{\n          letterSpacing: '-0.05rem',\n        }}\n      >\n        TANSTACK\n      </div>\n      <div\n        style={{\n          backgroundImage:\n            'linear-gradient(to right, var(--tw-gradient-stops))',\n          // @ts-ignore\n          '--tw-gradient-from': '#84cc16',\n          '--tw-gradient-stops':\n            'var(--tw-gradient-from), var(--tw-gradient-to)',\n          '--tw-gradient-to': '#10b981',\n          WebkitBackgroundClip: 'text',\n          color: 'transparent',\n          letterSpacing: '0.1rem',\n          marginRight: '-0.2rem',\n        }}\n      >\n        ROUTER\n      </div>\n    </div>\n  )\n}\n\nexport function TanStackRouterDevtools({\n  initialIsOpen,\n  panelProps = {},\n  closeButtonProps = {},\n  toggleButtonProps = {},\n  position = 'bottom-left',\n  containerElement: Container = 'footer',\n  router,\n}: DevtoolsOptions): React.ReactElement | null {\n  const rootRef = React.useRef<HTMLDivElement>(null)\n  const panelRef = React.useRef<HTMLDivElement>(null)\n  const [isOpen, setIsOpen] = useLocalStorage(\n    'tanstackRouterDevtoolsOpen',\n    initialIsOpen,\n  )\n  const [devtoolsHeight, setDevtoolsHeight] = useLocalStorage<number | null>(\n    'tanstackRouterDevtoolsHeight',\n    null,\n  )\n  const [isResolvedOpen, setIsResolvedOpen] = useSafeState(false)\n  const [isResizing, setIsResizing] = useSafeState(false)\n  const isMounted = useIsMounted()\n\n  const handleDragStart = (\n    panelElement: HTMLDivElement | null,\n    startEvent: React.MouseEvent<HTMLDivElement, MouseEvent>,\n  ) => {\n    if (startEvent.button !== 0) return // Only allow left click for drag\n\n    setIsResizing(true)\n\n    const dragInfo = {\n      originalHeight: panelElement?.getBoundingClientRect().height ?? 0,\n      pageY: startEvent.pageY,\n    }\n\n    const run = (moveEvent: MouseEvent) => {\n      const delta = dragInfo.pageY - moveEvent.pageY\n      const newHeight = dragInfo?.originalHeight + delta\n\n      setDevtoolsHeight(newHeight)\n\n      if (newHeight < 70) {\n        setIsOpen(false)\n      } else {\n        setIsOpen(true)\n      }\n    }\n\n    const unsub = () => {\n      setIsResizing(false)\n      document.removeEventListener('mousemove', run)\n      document.removeEventListener('mouseUp', unsub)\n    }\n\n    document.addEventListener('mousemove', run)\n    document.addEventListener('mouseup', unsub)\n  }\n\n  React.useEffect(() => {\n    setIsResolvedOpen(isOpen ?? false)\n  }, [isOpen, isResolvedOpen, setIsResolvedOpen])\n\n  // Toggle panel visibility before/after transition (depending on direction).\n  // Prevents focusing in a closed panel.\n  React.useEffect(() => {\n    const ref = panelRef.current\n\n    if (ref) {\n      const handlePanelTransitionStart = () => {\n        if (ref && isResolvedOpen) {\n          ref.style.visibility = 'visible'\n        }\n      }\n\n      const handlePanelTransitionEnd = () => {\n        if (ref && !isResolvedOpen) {\n          ref.style.visibility = 'hidden'\n        }\n      }\n\n      ref.addEventListener('transitionstart', handlePanelTransitionStart)\n      ref.addEventListener('transitionend', handlePanelTransitionEnd)\n\n      return () => {\n        ref.removeEventListener('transitionstart', handlePanelTransitionStart)\n        ref.removeEventListener('transitionend', handlePanelTransitionEnd)\n      }\n    }\n\n    return\n  }, [isResolvedOpen])\n\n  React[isServer ? 'useEffect' : 'useLayoutEffect'](() => {\n    if (isResolvedOpen) {\n      const previousValue = rootRef.current?.parentElement?.style.paddingBottom\n\n      const run = () => {\n        const containerHeight = panelRef.current?.getBoundingClientRect().height\n        if (rootRef.current?.parentElement) {\n          rootRef.current.parentElement.style.paddingBottom = `${containerHeight}px`\n        }\n      }\n\n      run()\n\n      if (typeof window !== 'undefined') {\n        window.addEventListener('resize', run)\n\n        return () => {\n          window.removeEventListener('resize', run)\n          if (\n            rootRef.current?.parentElement &&\n            typeof previousValue === 'string'\n          ) {\n            rootRef.current.parentElement.style.paddingBottom = previousValue\n          }\n        }\n      }\n    }\n    return\n  }, [isResolvedOpen])\n\n  const { style: panelStyle = {}, ...otherPanelProps } = panelProps\n\n  const {\n    style: closeButtonStyle = {},\n    onClick: onCloseClick,\n    ...otherCloseButtonProps\n  } = closeButtonProps\n\n  const {\n    style: toggleButtonStyle = {},\n    onClick: onToggleClick,\n    ...otherToggleButtonProps\n  } = toggleButtonProps\n\n  // Do not render on the server\n  if (!isMounted()) return null\n\n  return (\n    <Container ref={rootRef} className=\"TanStackRouterDevtools\">\n      <ThemeProvider theme={theme}>\n        <TanStackRouterDevtoolsPanel\n          ref={panelRef as any}\n          {...otherPanelProps}\n          router={router}\n          style={{\n            position: 'fixed',\n            bottom: '0',\n            right: '0',\n            zIndex: 99999,\n            width: '100%',\n            height: devtoolsHeight ?? 500,\n            maxHeight: '90%',\n            boxShadow: '0 0 20px rgba(0,0,0,.3)',\n            borderTop: `1px solid ${theme.gray}`,\n            transformOrigin: 'top',\n            // visibility will be toggled after transitions, but set initial state here\n            visibility: isOpen ? 'visible' : 'hidden',\n            ...panelStyle,\n            ...(isResizing\n              ? {\n                  transition: `none`,\n                }\n              : { transition: `all .2s ease` }),\n            ...(isResolvedOpen\n              ? {\n                  opacity: 1,\n                  pointerEvents: 'all',\n                  transform: `translateY(0) scale(1)`,\n                }\n              : {\n                  opacity: 0,\n                  pointerEvents: 'none',\n                  transform: `translateY(15px) scale(1.02)`,\n                }),\n          }}\n          isOpen={isResolvedOpen}\n          setIsOpen={setIsOpen}\n          handleDragStart={(e) => handleDragStart(panelRef.current, e)}\n        />\n        {isResolvedOpen ? (\n          <Button\n            type=\"button\"\n            aria-label=\"Close TanStack Router Devtools\"\n            {...(otherCloseButtonProps as any)}\n            onClick={(e) => {\n              setIsOpen(false)\n              onCloseClick && onCloseClick(e)\n            }}\n            style={{\n              position: 'fixed',\n              zIndex: 99999,\n              margin: '.5em',\n              bottom: 0,\n              ...(position === 'top-right'\n                ? {\n                    right: '0',\n                  }\n                : position === 'top-left'\n                ? {\n                    left: '0',\n                  }\n                : position === 'bottom-right'\n                ? {\n                    right: '0',\n                  }\n                : {\n                    left: '0',\n                  }),\n              ...closeButtonStyle,\n            }}\n          >\n            Close\n          </Button>\n        ) : null}\n      </ThemeProvider>\n      {!isResolvedOpen ? (\n        <button\n          type=\"button\"\n          {...otherToggleButtonProps}\n          aria-label=\"Open TanStack Router Devtools\"\n          onClick={(e) => {\n            setIsOpen(true)\n            onToggleClick && onToggleClick(e)\n          }}\n          style={{\n            appearance: 'none',\n            background: 'none',\n            border: 0,\n            padding: 0,\n            position: 'fixed',\n            zIndex: 99999,\n            display: 'inline-flex',\n            fontSize: '1.5em',\n            margin: '.5em',\n            cursor: 'pointer',\n            width: 'fit-content',\n            ...(position === 'top-right'\n              ? {\n                  top: '0',\n                  right: '0',\n                }\n              : position === 'top-left'\n              ? {\n                  top: '0',\n                  left: '0',\n                }\n              : position === 'bottom-right'\n              ? {\n                  bottom: '0',\n                  right: '0',\n                }\n              : {\n                  bottom: '0',\n                  left: '0',\n                }),\n            ...toggleButtonStyle,\n          }}\n        >\n          <Logo aria-hidden />\n        </button>\n      ) : null}\n    </Container>\n  )\n}\n\nfunction RouteComp({\n  route,\n  isRoot,\n  activeRouteId,\n  activeMatchId,\n  setActiveRouteId,\n  setActiveMatchId,\n}: {\n  route: AnyRootRoute | AnyRoute\n  isRoot?: boolean\n  activeRouteId: string | undefined\n  activeMatchId: string | undefined\n  setActiveRouteId: (id: string) => void\n  setActiveMatchId: (id: string) => void\n}) {\n  const router = useRouter()\n  const matches = [...router.state.pendingMatches, ...router.state.matches]\n  const match = router.state.matches.find((d) => d.routeId === route.id)\n\n  return (\n    <div>\n      <div\n        role=\"button\"\n        aria-label={`Open match details for ${route.id}`}\n        onClick={() => {\n          if (match) {\n            setActiveRouteId(activeRouteId === route.id ? '' : route.id)\n            setActiveMatchId(match.id)\n          }\n        }}\n        style={{\n          display: 'flex',\n          borderBottom: `solid 1px ${theme.grayAlt}`,\n          cursor: match ? 'pointer' : 'default',\n          alignItems: 'center',\n          background:\n            route.id === activeRouteId ? 'rgba(255,255,255,.1)' : undefined,\n        }}\n      >\n        {isRoot ? null : (\n          <div\n            style={{\n              flex: '0 0 auto',\n              width: '.7rem',\n              height: '.7rem',\n              margin: '.5rem .75rem',\n              alignItems: 'center',\n              justifyContent: 'center',\n              fontWeight: 'bold',\n              borderRadius: '100%',\n              transition: 'all .2s ease-out',\n              background: getRouteStatusColor(matches, route, theme),\n              opacity: match ? 1 : 0.3,\n            }}\n          />\n        )}\n        <Code\n          style={{\n            flex: '1 0 auto',\n            display: 'flex',\n            justifyContent: 'space-between',\n            padding: '.25rem .5rem .25rem 0',\n            paddingLeft: isRoot ? '.5rem' : 0,\n            opacity: match ? 1 : 0.7,\n            fontSize: '0.7rem',\n          }}\n        >\n          <span>{route.path || trimPath(route.id)} </span>\n          {match ? <span style={{ opacity: 0.3 }}>{match.id}</span> : null}\n        </Code>\n      </div>\n      {(route.children as Route[])?.length ? (\n        <div\n          style={{\n            marginLeft: isRoot ? 0 : '1rem',\n            borderLeft: isRoot ? '' : `solid 1px ${theme.grayAlt}`,\n          }}\n        >\n          {[...(route.children as Route[])]\n            .sort((a, b) => {\n              return a.rank - b.rank\n            })\n            .map((r) => (\n              <RouteComp\n                key={r.id}\n                route={r}\n                activeRouteId={activeRouteId}\n                activeMatchId={activeMatchId}\n                setActiveRouteId={setActiveRouteId}\n                setActiveMatchId={setActiveMatchId}\n              />\n            ))}\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nexport const TanStackRouterDevtoolsPanel = React.forwardRef<\n  HTMLDivElement,\n  DevtoolsPanelOptions\n>(function TanStackRouterDevtoolsPanel(props, ref): React.ReactElement {\n  const {\n    isOpen = true,\n    setIsOpen,\n    handleDragStart,\n    router: userRouter,\n    ...panelProps\n  } = props\n\n  const router = useRouter()\n  const matches = [...router.state.pendingMatches, ...router.state.matches]\n\n  invariant(\n    router,\n    'No router was found for the TanStack Router Devtools. Please place the devtools in the <RouterProvider> component tree or pass the router instance to the devtools manually.',\n  )\n\n  // useStore(router.__store)\n\n  const [showMatches, setShowMatches] = useLocalStorage(\n    'tanstackRouterDevtoolsShowMatches',\n    true,\n  )\n\n  const [activeRouteId, setActiveRouteId] = useLocalStorage(\n    'tanstackRouterDevtoolsActiveRouteId',\n    '',\n  )\n  const [activeMatchId, setActiveMatchId] = useLocalStorage(\n    'tanstackRouterDevtoolsActiveMatchId',\n    '',\n  )\n\n  const activeMatch = React.useMemo(\n    () =>\n      matches.find((d) => d.id === activeRouteId) ||\n      matches.find((d) => d.id === activeMatchId),\n    [activeRouteId, activeMatchId],\n  )\n\n  const hasSearch = Object.keys(router.state.location.search || {}).length\n\n  // const preloadMatches = matches.filter((match) => {\n  //   return (\n  //     !state.matchIds.includes(match.id) &&\n  //     !state.pendingMatchIds.includes(match.id)\n  //   )\n  // })\n\n  // React.useEffect(() => {\n  //   const interval = setInterval(() => {\n  //     router.cleanMatches()\n  //   }, 1000)\n\n  //   return () => clearInterval(interval)\n  // }, [router])\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Panel ref={ref} className=\"TanStackRouterDevtoolsPanel\" {...panelProps}>\n        <style\n          dangerouslySetInnerHTML={{\n            __html: `\n\n            .TanStackRouterDevtoolsPanel * {\n              scrollbar-color: ${theme.backgroundAlt} ${theme.gray};\n            }\n\n            .TanStackRouterDevtoolsPanel *::-webkit-scrollbar, .TanStackRouterDevtoolsPanel scrollbar {\n              width: 1em;\n              height: 1em;\n            }\n\n            .TanStackRouterDevtoolsPanel *::-webkit-scrollbar-track, .TanStackRouterDevtoolsPanel scrollbar-track {\n              background: ${theme.backgroundAlt};\n            }\n\n            .TanStackRouterDevtoolsPanel *::-webkit-scrollbar-thumb, .TanStackRouterDevtoolsPanel scrollbar-thumb {\n              background: ${theme.gray};\n              border-radius: .5em;\n              border: 3px solid ${theme.backgroundAlt};\n            }\n\n            .TanStackRouterDevtoolsPanel table {\n              width: 100%;\n            }\n\n            .TanStackRouterDevtoolsPanel table tr {\n              border-bottom: 2px dotted rgba(255, 255, 255, .2);\n            }\n\n            .TanStackRouterDevtoolsPanel table tr:last-child {\n              border-bottom: none\n            }\n\n            .TanStackRouterDevtoolsPanel table td {\n              padding: .25rem .5rem;\n              border-right: 2px dotted rgba(255, 255, 255, .05);\n            }\n\n            .TanStackRouterDevtoolsPanel table td:last-child {\n              border-right: none\n            }\n\n          `,\n          }}\n        />\n        <div\n          style={{\n            position: 'absolute',\n            left: 0,\n            top: 0,\n            width: '100%',\n            height: '4px',\n            marginBottom: '-4px',\n            cursor: 'row-resize',\n            zIndex: 100000,\n          }}\n          onMouseDown={handleDragStart}\n        ></div>\n        <div\n          style={{\n            flex: '1 1 500px',\n            minHeight: '40%',\n            maxHeight: '100%',\n            overflow: 'auto',\n            borderRight: `1px solid ${theme.grayAlt}`,\n            display: 'flex',\n            flexDirection: 'column',\n          }}\n        >\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'start',\n              gap: '1rem',\n              padding: '1rem',\n              alignItems: 'center',\n              background: theme.backgroundAlt,\n            }}\n          >\n            <Logo aria-hidden />\n            <div\n              style={{\n                fontSize: 'clamp(.8rem, 2vw, 1.3rem)',\n                fontWeight: 'bold',\n              }}\n            >\n              <span\n                style={{\n                  fontWeight: 100,\n                }}\n              >\n                Devtools\n              </span>\n            </div>\n          </div>\n          <div\n            style={{\n              overflowY: 'auto',\n              flex: '1',\n            }}\n          >\n            <div\n              style={{\n                padding: '.5em',\n              }}\n            >\n              <Explorer\n                label=\"Router\"\n                value={router}\n                defaultExpanded={{ state: {} as any, context: {} as any }}\n                filterSubEntries={(subEntries) => {\n                  return subEntries.filter((d) => typeof d.value !== 'function')\n                }}\n              />\n            </div>\n          </div>\n        </div>\n        <div\n          style={{\n            flex: '1 1 500px',\n            minHeight: '40%',\n            maxHeight: '100%',\n            overflow: 'auto',\n            borderRight: `1px solid ${theme.grayAlt}`,\n            display: 'flex',\n            flexDirection: 'column',\n          }}\n        >\n          <div\n            style={{\n              flex: '1 1 auto',\n              overflowY: 'auto',\n            }}\n          >\n            <div\n              style={{\n                padding: '.5em',\n                background: theme.backgroundAlt,\n                position: 'sticky',\n                top: 0,\n                zIndex: 1,\n                display: 'flex',\n                alignItems: 'center',\n                gap: '.5rem',\n                fontWeight: 'bold',\n              }}\n            >\n              Pathname{' '}\n              {router.state.location.maskedLocation ? (\n                <div\n                  style={{\n                    padding: '.1rem .5rem',\n                    background: theme.warning,\n                    color: 'black',\n                    borderRadius: '.5rem',\n                  }}\n                >\n                  Masked\n                </div>\n              ) : null}\n            </div>\n            <div\n              style={{\n                padding: '.5rem',\n                display: 'flex',\n                gap: '.5rem',\n                alignItems: 'center',\n              }}\n            >\n              <code\n                style={{\n                  opacity: 0.6,\n                }}\n              >\n                {router.state.location.pathname}\n              </code>\n              {router.state.location.maskedLocation ? (\n                <code\n                  style={{\n                    color: theme.warning,\n                    fontWeight: 'bold',\n                  }}\n                >\n                  {router.state.location.maskedLocation.pathname}\n                </code>\n              ) : null}\n            </div>\n            <div\n              style={{\n                padding: '.5em',\n                background: theme.backgroundAlt,\n                position: 'sticky',\n                top: 0,\n                zIndex: 1,\n                display: 'flex',\n                alignItems: 'center',\n                gap: '.5rem',\n                fontWeight: 'bold',\n              }}\n            >\n              <button\n                type=\"button\"\n                onClick={() => {\n                  setShowMatches(false)\n                }}\n                disabled={!showMatches}\n                style={{\n                  appearance: 'none',\n                  opacity: showMatches ? 0.5 : 1,\n                  border: 0,\n                  background: 'transparent',\n                  color: 'inherit',\n                  cursor: 'pointer',\n                }}\n              >\n                Routes\n              </button>\n              /\n              <button\n                type=\"button\"\n                onClick={() => {\n                  setShowMatches(true)\n                }}\n                disabled={showMatches}\n                style={{\n                  appearance: 'none',\n                  opacity: !showMatches ? 0.5 : 1,\n                  border: 0,\n                  background: 'transparent',\n                  color: 'inherit',\n                  cursor: 'pointer',\n                }}\n              >\n                Matches\n              </button>\n            </div>\n            {!showMatches ? (\n              <RouteComp\n                route={router.routeTree}\n                isRoot\n                activeRouteId={activeRouteId}\n                activeMatchId={activeMatchId}\n                setActiveRouteId={setActiveRouteId}\n                setActiveMatchId={setActiveMatchId}\n              />\n            ) : (\n              <div>\n                {router.state.matches.map((match, i) => {\n                  return (\n                    <div\n                      key={match.routeId || i}\n                      role=\"button\"\n                      aria-label={`Open match details for ${match.routeId}`}\n                      onClick={() =>\n                        setActiveRouteId(\n                          activeRouteId === match.routeId ? '' : match.routeId,\n                        )\n                      }\n                      style={{\n                        display: 'flex',\n                        borderBottom: `solid 1px ${theme.grayAlt}`,\n                        cursor: 'pointer',\n                        alignItems: 'center',\n                        background:\n                          match === activeMatch\n                            ? 'rgba(255,255,255,.1)'\n                            : undefined,\n                      }}\n                    >\n                      <div\n                        style={{\n                          flex: '0 0 auto',\n                          width: '1.3rem',\n                          height: '1.3rem',\n                          marginLeft: '.25rem',\n                          background: getStatusColor(match, theme),\n                          alignItems: 'center',\n                          justifyContent: 'center',\n                          fontWeight: 'bold',\n                          borderRadius: '.25rem',\n                          transition: 'all .2s ease-out',\n                        }}\n                      />\n\n                      <Code\n                        style={{\n                          padding: '.5em',\n                          fontSize: '0.7rem',\n                        }}\n                      >\n                        {`${match.id}`}\n                      </Code>\n                    </div>\n                  )\n                })}\n              </div>\n            )}\n          </div>\n          {/* {preloadMatches?.length ? (\n            <div\n              style={{\n                flex: '1 1 auto',\n                overflowY: 'auto',\n                maxHeight: '50%',\n              }}\n            >\n              <div\n                style={{\n                  padding: '.5em',\n                  background: theme.backgroundAlt,\n                  position: 'sticky',\n                  top: 0,\n                  zIndex: 1,\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: '.5rem',\n                  fontWeight: 'bold',\n                }}\n              >\n                Preloaded Matches\n              </div>\n              {preloadMatches.map((match) => {\n                return (\n                  <div\n                    key={match.id}\n                    role=\"button\"\n                    aria-label={`Open match details for ${match.routeId}`}\n                    onClick={() =>\n                      setActiveMatchId(\n                        activeMatchId === match.id ? '' : match.id,\n                      )\n                    }\n                    style={{\n                      display: 'flex',\n                      borderBottom: `solid 1px ${theme.grayAlt}`,\n                      cursor: 'pointer',\n                      alignItems: 'center',\n                      background:\n                        match === activeMatch\n                          ? 'rgba(255,255,255,.1)'\n                          : undefined,\n                    }}\n                  >\n                    <div\n                      style={{\n                        flex: '0 0 auto',\n                        width: '1.3rem',\n                        height: '1.3rem',\n                        marginLeft: '.25rem',\n                        background: getStatusColor(match, theme),\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        fontWeight: 'bold',\n                        borderRadius: '.25rem',\n                        transition: 'all .2s ease-out',\n                      }}\n                    />\n\n                    <Code\n                      style={{\n                        padding: '.5em',\n                        fontSize: '0.7rem',\n                      }}\n                    >\n                      {`${match.id}`}\n                    </Code>\n                  </div>\n                )\n              })}\n            </div>\n          ) : null} */}\n        </div>\n        {activeMatch ? (\n          <ActivePanel>\n            <div\n              style={{\n                padding: '.5em',\n                background: theme.backgroundAlt,\n                position: 'sticky',\n                top: 0,\n                bottom: 0,\n                zIndex: 1,\n              }}\n            >\n              Match Details\n            </div>\n            <div>\n              <table>\n                <tbody>\n                  <tr>\n                    <td style={{ opacity: '.5' }}>ID</td>\n                    <td>\n                      <Code\n                        style={{\n                          lineHeight: '1.8em',\n                        }}\n                      >\n                        {JSON.stringify(activeMatch.id, null, 2)}\n                      </Code>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td style={{ opacity: '.5' }}>Status</td>\n                    <td>{activeMatch.status}</td>\n                  </tr>\n                  {/* <tr>\n                    <td style={{ opacity: '.5' }}>Invalid</td>\n                    <td>{activeMatch.getIsInvalid().toString()}</td>\n                  </tr> */}\n                  <tr>\n                    <td style={{ opacity: '.5' }}>Last Updated</td>\n                    <td>\n                      {activeMatch.updatedAt\n                        ? new Date(\n                            activeMatch.updatedAt as number,\n                          ).toLocaleTimeString()\n                        : 'N/A'}\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n            {/* <div\n              style={{\n                background: theme.backgroundAlt,\n                padding: '.5em',\n                position: 'sticky',\n                top: 0,\n                bottom: 0,\n                zIndex: 1,\n              }}\n            >\n              Actions\n            </div>\n            <div\n              style={{\n                padding: '0.5em',\n              }}\n            >\n              <Button\n                type=\"button\"\n                onClick={() => activeMatch.__store.setState(d => ({...d, status: 'pending'}))}\n                style={{\n                  background: theme.gray,\n                }}\n              >\n                Reload\n              </Button>\n            </div> */}\n            <div\n              style={{\n                background: theme.backgroundAlt,\n                padding: '.5em',\n                position: 'sticky',\n                top: 0,\n                bottom: 0,\n                zIndex: 1,\n              }}\n            >\n              Explorer\n            </div>\n            <div\n              style={{\n                padding: '.5em',\n              }}\n            >\n              <Explorer\n                label=\"Match\"\n                value={activeMatch}\n                defaultExpanded={{}}\n              />\n            </div>\n          </ActivePanel>\n        ) : null}\n        {hasSearch ? (\n          <div\n            style={{\n              flex: '1 1 500px',\n              minHeight: '40%',\n              maxHeight: '100%',\n              overflow: 'auto',\n              borderRight: `1px solid ${theme.grayAlt}`,\n              display: 'flex',\n              flexDirection: 'column',\n            }}\n          >\n            <div\n              style={{\n                padding: '.5em',\n                background: theme.backgroundAlt,\n                position: 'sticky',\n                top: 0,\n                bottom: 0,\n                zIndex: 1,\n                fontWeight: 'bold',\n              }}\n            >\n              Search Params\n            </div>\n            <div\n              style={{\n                padding: '.5em',\n              }}\n            >\n              <Explorer\n                value={router.state.location.search || {}}\n                defaultExpanded={Object.keys(\n                  (router.state.location.search as {}) || {},\n                ).reduce((obj: any, next) => {\n                  obj[next] = {}\n                  return obj\n                }, {})}\n              />\n            </div>\n          </div>\n        ) : null}\n      </Panel>\n    </ThemeProvider>\n  )\n})\n"],"names":["React","getItem","key","itemValue","localStorage","JSON","parse","undefined","useLocalStorage","defaultValue","value","setValue","useState","useEffect","initialValue","setter","useCallback","updater","old","newVal","setItem","stringify","defaultTheme","background","backgroundAlt","foreground","gray","grayAlt","inputBackgroundColor","inputTextColor","success","danger","active","warning","ThemeContext","createContext","ThemeProvider","theme","rest","createElement","Provider","_extends","useTheme","useContext","useMediaQuery","query","isMatch","setIsMatch","window","matchMedia","matches","matcher","onChange","addListener","removeListener","isServer","getStatusColor","match","status","isFetching","getRouteStatusColor","route","found","find","d","routeId","id","styled","type","newStyles","queries","forwardRef","style","ref","mediaStyles","Object","entries","reduce","current","useIsMounted","mountedRef","useRef","isMounted","displayValue","name","getOwnPropertyNames","newValue","toString","useSafeState","initialState","state","setState","safeSetState","scheduleMicrotask","callback","Promise","resolve","then","catch","error","setTimeout","Panel","_props","fontSize","fontFamily","display","backgroundColor","color","flexDirection","ActivePanel","flex","overflow","height","(max-width: 700px)","borderTop","Button","props","appearance","fontWeight","border","borderRadius","padding","opacity","disabled","cursor","Code","Entry","lineHeight","outline","wordBreak","Label","LabelButton","ExpandButton","font","Value","SubEntries","marginLeft","paddingLeft","borderLeft","Info","Expander","expanded","transition","transform","chunkArray","array","size","i","result","length","push","slice","DefaultRenderer","handleEntry","label","subEntries","subEntryPages","toggleExpanded","pageSize","renderer","expandedPages","setExpandedPages","valueSnapshot","setValueSnapshot","refreshValueSnapshot","Fragment","onClick","String","toLowerCase","map","entry","index","includes","filter","Explorer","defaultExpanded","isIterable","x","Symbol","iterator","filterSubEntries","setExpanded","Boolean","makeProperty","sub","subDefaultExpanded","Array","isArray","from","val","Logo","alignItems","letterSpacing","backgroundImage","WebkitBackgroundClip","marginRight","TanStackRouterDevtools","initialIsOpen","panelProps","closeButtonProps","toggleButtonProps","position","containerElement","Container","router","rootRef","panelRef","isOpen","setIsOpen","devtoolsHeight","setDevtoolsHeight","isResolvedOpen","setIsResolvedOpen","isResizing","setIsResizing","handleDragStart","panelElement","startEvent","button","dragInfo","originalHeight","getBoundingClientRect","pageY","run","moveEvent","delta","newHeight","unsub","document","removeEventListener","addEventListener","handlePanelTransitionStart","visibility","handlePanelTransitionEnd","previousValue","parentElement","paddingBottom","containerHeight","panelStyle","otherPanelProps","closeButtonStyle","onCloseClick","otherCloseButtonProps","toggleButtonStyle","onToggleClick","otherToggleButtonProps","className","TanStackRouterDevtoolsPanel","bottom","right","zIndex","width","maxHeight","boxShadow","transformOrigin","pointerEvents","e","margin","left","top","RouteComp","isRoot","activeRouteId","activeMatchId","setActiveRouteId","setActiveMatchId","useRouter","pendingMatches","role","borderBottom","justifyContent","path","trimPath","children","sort","a","b","rank","r","userRouter","invariant","showMatches","setShowMatches","activeMatch","useMemo","hasSearch","keys","location","search","dangerouslySetInnerHTML","__html","marginBottom","onMouseDown","minHeight","borderRight","gap","overflowY","context","maskedLocation","pathname","routeTree","updatedAt","Date","toLocaleTimeString","obj","next"],"mappings":"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"}