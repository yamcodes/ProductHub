{"version":3,"file":"Explorer.js","sources":["../../src/Explorer.tsx"],"sourcesContent":["import * as React from 'react'\n\nimport { displayValue, styled } from './utils'\n\nexport const Entry = styled('div', {\n  fontFamily: 'Menlo, monospace',\n  fontSize: '.7rem',\n  lineHeight: '1.7',\n  outline: 'none',\n  wordBreak: 'break-word',\n})\n\nexport const Label = styled('span', {\n  color: 'white',\n})\n\nexport const LabelButton = styled('button', {\n  cursor: 'pointer',\n  color: 'white',\n})\n\nexport const ExpandButton = styled('button', {\n  cursor: 'pointer',\n  color: 'inherit',\n  font: 'inherit',\n  outline: 'inherit',\n  background: 'transparent',\n  border: 'none',\n  padding: 0,\n})\n\nexport const Value = styled('span', (_props, theme) => ({\n  color: theme.danger,\n}))\n\nexport const SubEntries = styled('div', {\n  marginLeft: '.1em',\n  paddingLeft: '1em',\n  borderLeft: '2px solid rgba(0,0,0,.15)',\n})\n\nexport const Info = styled('span', {\n  color: 'grey',\n  fontSize: '.7em',\n})\n\ntype ExpanderProps = {\n  expanded: boolean\n  style?: React.CSSProperties\n}\n\nexport const Expander = ({ expanded, style = {} }: ExpanderProps) => (\n  <span\n    style={{\n      display: 'inline-block',\n      transition: 'all .1s ease',\n      transform: `rotate(${expanded ? 90 : 0}deg) ${style.transform || ''}`,\n      ...style,\n    }}\n  >\n    â–¶\n  </span>\n)\n\ntype Entry = {\n  label: string\n}\n\ntype RendererProps = {\n  handleEntry: HandleEntryFn\n  label?: React.ReactNode\n  value: unknown\n  subEntries: Entry[]\n  subEntryPages: Entry[][]\n  type: string\n  expanded: boolean\n  toggleExpanded: () => void\n  pageSize: number\n  renderer?: Renderer\n  filterSubEntries?: (subEntries: Property[]) => Property[]\n}\n\n/**\n * Chunk elements in the array by size\n *\n * when the array cannot be chunked evenly by size, the last chunk will be\n * filled with the remaining elements\n *\n * @example\n * chunkArray(['a','b', 'c', 'd', 'e'], 2) // returns [['a','b'], ['c', 'd'], ['e']]\n */\nexport function chunkArray<T>(array: T[], size: number): T[][] {\n  if (size < 1) return []\n  let i = 0\n  const result: T[][] = []\n  while (i < array.length) {\n    result.push(array.slice(i, i + size))\n    i = i + size\n  }\n  return result\n}\n\ntype Renderer = (props: RendererProps) => JSX.Element\n\nexport const DefaultRenderer: Renderer = ({\n  handleEntry,\n  label,\n  value,\n  subEntries = [],\n  subEntryPages = [],\n  type,\n  expanded = false,\n  toggleExpanded,\n  pageSize,\n  renderer,\n}) => {\n  const [expandedPages, setExpandedPages] = React.useState<number[]>([])\n  const [valueSnapshot, setValueSnapshot] = React.useState(undefined)\n\n  const refreshValueSnapshot = () => {\n    setValueSnapshot((value as () => any)())\n  }\n\n  return (\n    <Entry>\n      {subEntryPages.length ? (\n        <>\n          <ExpandButton onClick={() => toggleExpanded()}>\n            <Expander expanded={expanded} /> {label}{' '}\n            <Info>\n              {String(type).toLowerCase() === 'iterable' ? '(Iterable) ' : ''}\n              {subEntries.length} {subEntries.length > 1 ? `items` : `item`}\n            </Info>\n          </ExpandButton>\n          {expanded ? (\n            subEntryPages.length === 1 ? (\n              <SubEntries>\n                {subEntries.map((entry, index) => handleEntry(entry))}\n              </SubEntries>\n            ) : (\n              <SubEntries>\n                {subEntryPages.map((entries, index) => (\n                  <div key={index}>\n                    <Entry>\n                      <LabelButton\n                        onClick={() =>\n                          setExpandedPages((old) =>\n                            old.includes(index)\n                              ? old.filter((d) => d !== index)\n                              : [...old, index],\n                          )\n                        }\n                      >\n                        <Expander expanded={expanded} /> [{index * pageSize} ...{' '}\n                        {index * pageSize + pageSize - 1}]\n                      </LabelButton>\n                      {expandedPages.includes(index) ? (\n                        <SubEntries>\n                          {entries.map((entry) => handleEntry(entry))}\n                        </SubEntries>\n                      ) : null}\n                    </Entry>\n                  </div>\n                ))}\n              </SubEntries>\n            )\n          ) : null}\n        </>\n      ) : type === 'function' ? (\n        <>\n          <Explorer\n            renderer={renderer}\n            label={\n              <button\n                onClick={refreshValueSnapshot}\n                style={{\n                  appearance: 'none',\n                  border: '0',\n                  background: 'transparent',\n                }}\n              >\n                <Label>{label}</Label> ðŸ”„{' '}\n              </button>\n            }\n            value={valueSnapshot}\n            defaultExpanded={{}}\n          />\n        </>\n      ) : (\n        <>\n          <Label>{label}:</Label> <Value>{displayValue(value)}</Value>\n        </>\n      )}\n    </Entry>\n  )\n}\n\ntype HandleEntryFn = (entry: Entry) => JSX.Element\n\ntype ExplorerProps = Partial<RendererProps> & {\n  renderer?: Renderer\n  defaultExpanded?: true | Record<string, boolean>\n}\n\ntype Property = {\n  defaultExpanded?: boolean | Record<string, boolean>\n  label: string\n  value: unknown\n}\n\nfunction isIterable(x: any): x is Iterable<unknown> {\n  return Symbol.iterator in x\n}\n\nexport default function Explorer({\n  value,\n  defaultExpanded,\n  renderer = DefaultRenderer,\n  pageSize = 100,\n  filterSubEntries,\n  ...rest\n}: ExplorerProps) {\n  const [expanded, setExpanded] = React.useState(Boolean(defaultExpanded))\n  const toggleExpanded = React.useCallback(() => setExpanded((old) => !old), [])\n\n  let type: string = typeof value\n  let subEntries: Property[] = []\n\n  const makeProperty = (sub: { label: string; value: unknown }): Property => {\n    const subDefaultExpanded =\n      defaultExpanded === true\n        ? { [sub.label]: true }\n        : defaultExpanded?.[sub.label]\n    return {\n      ...sub,\n      defaultExpanded: subDefaultExpanded,\n    }\n  }\n\n  if (Array.isArray(value)) {\n    type = 'array'\n    subEntries = value.map((d, i) =>\n      makeProperty({\n        label: i.toString(),\n        value: d,\n      }),\n    )\n  } else if (\n    value !== null &&\n    typeof value === 'object' &&\n    isIterable(value) &&\n    typeof value[Symbol.iterator] === 'function'\n  ) {\n    type = 'Iterable'\n    subEntries = Array.from(value, (val, i) =>\n      makeProperty({\n        label: i.toString(),\n        value: val,\n      }),\n    )\n  } else if (typeof value === 'object' && value !== null) {\n    type = 'object'\n    subEntries = Object.entries(value).map(([key, val]) =>\n      makeProperty({\n        label: key,\n        value: val,\n      }),\n    )\n  }\n\n  subEntries = filterSubEntries ? filterSubEntries(subEntries) : subEntries\n\n  const subEntryPages = chunkArray(subEntries, pageSize)\n\n  return renderer({\n    handleEntry: (entry) => (\n      <Explorer\n        key={entry.label}\n        value={value}\n        renderer={renderer}\n        filterSubEntries={filterSubEntries}\n        {...rest}\n        {...entry}\n      />\n    ),\n    type,\n    subEntries,\n    subEntryPages,\n    value,\n    expanded,\n    toggleExpanded,\n    pageSize,\n    ...rest,\n  })\n}\n"],"names":["Entry","styled","fontFamily","fontSize","lineHeight","outline","wordBreak","Label","color","LabelButton","cursor","ExpandButton","font","background","border","padding","Value","_props","theme","danger","SubEntries","marginLeft","paddingLeft","borderLeft","Info","Expander","expanded","style","React","createElement","display","transition","transform","chunkArray","array","size","i","result","length","push","slice","DefaultRenderer","handleEntry","label","value","subEntries","subEntryPages","type","toggleExpanded","pageSize","renderer","expandedPages","setExpandedPages","useState","valueSnapshot","setValueSnapshot","undefined","refreshValueSnapshot","Fragment","onClick","String","toLowerCase","map","entry","index","entries","key","old","includes","filter","d","Explorer","appearance","defaultExpanded","displayValue","isIterable","x","Symbol","iterator","filterSubEntries","rest","setExpanded","Boolean","useCallback","makeProperty","sub","subDefaultExpanded","Array","isArray","toString","from","val","Object","_extends"],"mappings":"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"}