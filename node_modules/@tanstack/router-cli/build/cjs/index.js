/**
 * router-cli
 *
 * Copyright (c) TanStack
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var yargs = require('yargs');
var config = require('./config.js');
var generate = require('./generate.js');
var watch = require('./watch.js');

function _interopNamespace(e) {
  if (e && e.__esModule) return e;
  var n = Object.create(null);
  if (e) {
    Object.keys(e).forEach(function (k) {
      if (k !== 'default') {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () { return e[k]; }
        });
      }
    });
  }
  n["default"] = e;
  return Object.freeze(n);
}

var yargs__namespace = /*#__PURE__*/_interopNamespace(yargs);

main();
function main() {
  yargs__namespace.scriptName('tsr').usage('$0 <cmd> [args]').command('generate', 'Generate the routes for a project', async argv => {
    const config$1 = await config.getConfig();
    await generate.generate(config$1);
  }).command('watch', 'Continuously watch and generate the routes for a project', async argv => {
    watch.watch();
  }).help().argv;
}

exports.main = main;
//# sourceMappingURL=index.js.map
