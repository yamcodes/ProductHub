{"version":3,"file":"generator.js","sources":["../../src/generator.ts"],"sourcesContent":["import klaw from 'klaw'\nimport through2 from 'through2'\nimport path from 'path'\nimport fs from 'fs-extra'\nimport crypto from 'crypto'\nimport {\n  detectExports,\n  ensureBoilerplate,\n  generateRouteConfig,\n  isolatedProperties,\n  isolateOptionToExport,\n} from './transformCode'\nimport { Config } from './config'\n\nlet latestTask = 0\nexport const rootRouteName = '__root'\nexport const rootRouteClientName = '__root.client'\n\nexport type RouteNode = {\n  filename: string\n  clientFilename: string\n  fileNameNoExt: string\n  fullPath: string\n  fullDir: string\n  isDirectory: boolean\n  isIndex: boolean\n  variable: string\n  childRoutesDir?: string\n  genPath: string\n  genDir: string\n  genPathNoExt: string\n  parent?: RouteNode\n  hash?: string\n  importedFiles?: string[]\n  version?: number\n  changed?: boolean\n  new?: boolean\n  isRoot?: boolean\n  children?: RouteNode[]\n}\n\nexport type IsolatedExport = {\n  key: string\n  exported: boolean\n  code?: string | null\n}\n\nlet nodeCache: RouteNode[] = undefined!\n\nexport async function generator(config: Config) {\n  console.log()\n\n  let first = false\n\n  if (!nodeCache) {\n    first = true\n    console.log('🔄 Generating routes...')\n    nodeCache = []\n  } else {\n    console.log('♻️  Regenerating routes...')\n  }\n\n  const taskId = latestTask + 1\n  latestTask = taskId\n\n  const checkLatest = () => {\n    if (latestTask !== taskId) {\n      console.log(`- Skipping since file changes were made while generating.`)\n      return false\n    }\n\n    return true\n  }\n\n  const start = Date.now()\n  let routeConfigImports: string[] = []\n  let routeConfigClientImports: string[] = []\n\n  let nodesChanged = false\n  const fileQueue: [string, string][] = []\n  const queueWriteFile = (filename: string, content: string) => {\n    fileQueue.push([filename, content])\n  }\n\n  async function reparent(dir: string): Promise<RouteNode[]> {\n    let dirList\n\n    try {\n      dirList = await fs.readdir(dir)\n    } catch (err) {\n      console.log()\n      console.error(\n        'TSR: Error reading the config.routesDirectory. Does it exist?',\n      )\n      console.log()\n      throw err\n    }\n\n    const dirListCombo = multiSortBy(\n      await Promise.all(\n        dirList.map(async (filename): Promise<RouteNode> => {\n          const fullPath = path.resolve(dir, filename)\n          const stat = await fs.lstat(fullPath)\n          const ext = path.extname(filename)\n\n          const clientFilename = filename.replace(ext, `.client${ext}`)\n\n          const pathFromRoutes = path.relative(config.routesDirectory, fullPath)\n          const genPath = path.resolve(config.routeGenDirectory, pathFromRoutes)\n\n          const genPathNoExt = removeExt(genPath)\n          const genDir = path.resolve(genPath, '..')\n\n          const fileNameNoExt = removeExt(filename)\n\n          return {\n            filename,\n            clientFilename,\n            fileNameNoExt,\n            fullPath,\n            fullDir: dir,\n            genPath,\n            genDir,\n            genPathNoExt,\n            variable: fileToVariable(removeExt(pathFromRoutes)),\n            isDirectory: stat.isDirectory(),\n            isIndex: fileNameNoExt === 'index',\n          }\n        }),\n      ),\n      [\n        (d) => (d.fileNameNoExt === 'index' ? -1 : 1),\n        (d) => d.fileNameNoExt,\n        (d) => (d.isDirectory ? 1 : -1),\n      ],\n    )\n\n    const reparented: typeof dirListCombo = []\n\n    dirListCombo.forEach(async (d, i) => {\n      if (d.isDirectory) {\n        const parent = reparented.find(\n          (dd) => !dd.isDirectory && dd.fileNameNoExt === d.filename,\n        )\n\n        if (parent) {\n          parent.childRoutesDir = d.fullPath\n        } else {\n          reparented.push(d)\n        }\n      } else {\n        reparented.push(d)\n      }\n    })\n\n    return Promise.all(\n      reparented.map(async (d) => {\n        if (d.childRoutesDir) {\n          const children = await reparent(d.childRoutesDir)\n\n          d = {\n            ...d,\n            children,\n          }\n\n          children.forEach((child) => (child.parent = d))\n\n          return d\n        }\n        return d\n      }),\n    )\n  }\n\n  const reparented = await reparent(config.routesDirectory)\n\n  async function buildRouteConfig(\n    nodes: RouteNode[],\n    depth = 1,\n  ): Promise<string> {\n    const children = nodes.map(async (n) => {\n      let node = nodeCache.find((d) => d.fullPath === n.fullPath)!\n\n      if (node) {\n        node.new = false\n      } else {\n        node = n\n        nodeCache.push(node)\n        if (!first) {\n          node.new = true\n        }\n      }\n\n      node.version = latestTask\n      if (node.fileNameNoExt === '__root') {\n        node.isRoot = true\n      }\n\n      const routeCode = await fs.readFile(node.fullPath, 'utf-8')\n\n      const hashSum = crypto.createHash('sha256')\n      hashSum.update(routeCode)\n      const hash = hashSum.digest('hex')\n\n      node.changed = node.hash !== hash\n      if (node.changed) {\n        nodesChanged = true\n        node.hash = hash\n\n        try {\n          // Ensure the boilerplate for the route exists\n          const code = await ensureBoilerplate(node, routeCode)\n\n          if (code) {\n            await fs.writeFile(node.fullPath, code)\n          }\n\n          let imports: IsolatedExport[] = []\n\n          if (!node.isRoot) {\n            // Generate the isolated files\n            const transforms = await Promise.all(\n              isolatedProperties.map(async (key): Promise<IsolatedExport> => {\n                let exported = false\n                let exports: string[] = []\n\n                const transformed = await isolateOptionToExport(\n                  node,\n                  routeCode,\n                  {\n                    isolate: key,\n                  },\n                )\n\n                if (transformed) {\n                  exports = await detectExports(transformed)\n                  if (exports.includes(key)) {\n                    exported = true\n                  }\n                }\n\n                return { key, exported, code: transformed }\n              }),\n            )\n\n            imports = transforms.filter(({ exported }) => exported)\n\n            node.importedFiles = await Promise.all(\n              imports.map(({ key, code }) => {\n                const importFilename = `${node.genPathNoExt}-${key}.tsx`\n                queueWriteFile(importFilename, code!)\n                return importFilename\n              }),\n            )\n          }\n\n          const routeConfigCode = await generateRouteConfig(\n            node,\n            routeCode,\n            imports,\n            false,\n          )\n\n          const clientRouteConfigCode = await generateRouteConfig(\n            node,\n            routeCode,\n            imports,\n            true,\n          )\n\n          queueWriteFile(node.genPath, routeConfigCode)\n          queueWriteFile(\n            path.resolve(node.genDir, node.clientFilename),\n            clientRouteConfigCode,\n          )\n        } catch (err) {\n          node.hash = ''\n        }\n      }\n\n      routeConfigImports.push(\n        `import { routeConfig as ${node.variable}Route } from './${removeExt(\n          path.relative(config.routeGenDirectory, node.genPath),\n        )}'`,\n      )\n\n      routeConfigClientImports.push(\n        `import { routeConfig as ${node.variable}Route } from './${removeExt(\n          path.relative(\n            config.routeGenDirectory,\n            path.resolve(node.genDir, node.clientFilename),\n          ),\n        )}'`,\n      )\n\n      if (node.isRoot) {\n        return undefined\n      }\n\n      const route = `${node.variable}Route`\n\n      if (node.children?.length) {\n        const childConfigs = await buildRouteConfig(node.children, depth + 1)\n        return `${route}.addChildren([\\n${spaces(\n          depth * 4,\n        )}${childConfigs}\\n${spaces(depth * 2)}])`\n      }\n\n      return route\n    })\n\n    return (await Promise.all(children))\n      .filter(Boolean)\n      .join(`,\\n${spaces(depth * 2)}`)\n  }\n\n  const routeConfigChildrenText = await buildRouteConfig(reparented)\n\n  routeConfigImports = multiSortBy(routeConfigImports, [\n    (d) => (d.includes('__root') ? -1 : 1),\n    (d) => d.split('/').length,\n    (d) => (d.endsWith(\"index'\") ? -1 : 1),\n    (d) => d,\n  ])\n\n  routeConfigClientImports = multiSortBy(routeConfigClientImports, [\n    (d) => (d.includes('__root') ? -1 : 1),\n    (d) => d.split('/').length,\n    (d) => (d.endsWith(\"index.client'\") ? -1 : 1),\n    (d) => d,\n  ])\n\n  const routeConfig = `export const routeConfig = rootRoute.addChildren([\\n  ${routeConfigChildrenText}\\n])\\nexport type __GeneratedRouteConfig = typeof routeConfig`\n  const routeConfigClient = `export const routeConfigClient = rootRoute.addChildren([\\n  ${routeConfigChildrenText}\\n]) as __GeneratedRouteConfig`\n\n  const routeConfigFileContent = [\n    routeConfigImports.join('\\n'),\n    routeConfig,\n  ].join('\\n\\n')\n\n  const routeConfigClientFileContent = [\n    `import type { __GeneratedRouteConfig } from './routeConfig'`,\n    routeConfigClientImports.join('\\n'),\n    routeConfigClient,\n  ].join('\\n\\n')\n\n  if (nodesChanged) {\n    queueWriteFile(\n      path.resolve(config.routeGenDirectory, 'routeConfig.ts'),\n      routeConfigFileContent,\n    )\n    queueWriteFile(\n      path.resolve(config.routeGenDirectory, 'routeConfig.client.ts'),\n      routeConfigClientFileContent,\n    )\n  }\n\n  // Do all of our file system manipulation at the end\n  await fs.mkdir(config.routeGenDirectory, { recursive: true })\n\n  if (!checkLatest()) return\n\n  await Promise.all(\n    fileQueue.map(async ([filename, content]) => {\n      await fs.ensureDir(path.dirname(filename))\n      const exists = await fs.pathExists(filename)\n      let current = ''\n      if (exists) {\n        current = await fs.readFile(filename, 'utf-8')\n      }\n      if (current !== content) {\n        await fs.writeFile(filename, content)\n      }\n    }),\n  )\n\n  if (!checkLatest()) return\n\n  const allFiles = await getAllFiles(config.routeGenDirectory)\n\n  if (!checkLatest()) return\n\n  const removedNodes: RouteNode[] = []\n\n  nodeCache = nodeCache.filter((d) => {\n    if (d.version !== latestTask) {\n      removedNodes.push(d)\n      return false\n    }\n    return true\n  })\n\n  const newNodes = nodeCache.filter((d) => d.new)\n  const updatedNodes = nodeCache.filter((d) => !d.new && d.changed)\n\n  const unusedFiles = allFiles.filter((d) => {\n    if (\n      d === path.resolve(config.routeGenDirectory, 'routeConfig.ts') ||\n      d === path.resolve(config.routeGenDirectory, 'routeConfig.client.ts')\n    ) {\n      return false\n    }\n\n    let node = nodeCache.find(\n      (n) =>\n        n.genPath === d ||\n        path.resolve(n.genDir, n.clientFilename) === d ||\n        n.importedFiles?.includes(d),\n    )\n\n    return !node\n  })\n\n  await Promise.all(\n    unusedFiles.map((d) => {\n      fs.remove(d)\n    }),\n  )\n\n  console.log(\n    `🌲 Processed ${nodeCache.length} routes in ${Date.now() - start}ms`,\n  )\n\n  if (newNodes.length || updatedNodes.length || removedNodes.length) {\n    if (newNodes.length) {\n      console.log(`🥳 Added ${newNodes.length} new routes`)\n    }\n\n    if (updatedNodes.length) {\n      console.log(`✅ Updated ${updatedNodes.length} routes`)\n    }\n\n    if (removedNodes.length) {\n      console.log(`🗑 Removed ${removedNodes.length} unused routes`)\n    }\n  } else {\n    console.log(`🎉 No changes were found. Carry on!`)\n  }\n}\n\nfunction getAllFiles(dir: string): Promise<string[]> {\n  return new Promise((resolve, reject) => {\n    const excludeDirFilter = through2.obj(function (item, enc, next) {\n      if (!item.stats.isDirectory()) this.push(item)\n      next()\n    })\n\n    const items: string[] = []\n\n    klaw(dir)\n      .pipe(excludeDirFilter)\n      .on('data', (item) => items.push(item.path))\n      .on('error', (err) => reject(err))\n      .on('end', () => resolve(items))\n  })\n}\n\nfunction fileToVariable(d: string) {\n  return d\n    .split('/')\n    .map((d, i) => (i > 0 ? capitalize(d) : d))\n    .join('')\n    .replace(/([^a-zA-Z0-9]|[\\.])/gm, '')\n}\n\nexport function removeExt(d: string) {\n  return d.substring(0, d.lastIndexOf('.')) || d\n}\n\nfunction spaces(d: number): string {\n  return Array.from({ length: d })\n    .map(() => ' ')\n    .join('')\n}\n\nexport function multiSortBy<T>(\n  arr: T[],\n  accessors: ((item: T) => any)[] = [(d) => d],\n): T[] {\n  return arr\n    .map((d, i) => [d, i] as const)\n    .sort(([a, ai], [b, bi]) => {\n      for (const accessor of accessors) {\n        const ao = accessor(a)\n        const bo = accessor(b)\n\n        if (typeof ao === 'undefined') {\n          if (typeof bo === 'undefined') {\n            continue\n          }\n          return 1\n        }\n\n        if (ao === bo) {\n          continue\n        }\n\n        return ao > bo ? 1 : -1\n      }\n\n      return ai - bi\n    })\n    .map(([d]) => d)\n}\n\nfunction capitalize(s: string) {\n  if (typeof s !== 'string') return ''\n  return s.charAt(0).toUpperCase() + s.slice(1)\n}\n"],"names":["latestTask","rootRouteName","rootRouteClientName","nodeCache","undefined","generator","config","console","log","first","taskId","checkLatest","start","Date","now","routeConfigImports","routeConfigClientImports","nodesChanged","fileQueue","queueWriteFile","filename","content","push","reparent","dir","dirList","fs","readdir","err","error","dirListCombo","multiSortBy","Promise","all","map","fullPath","path","resolve","stat","lstat","ext","extname","clientFilename","replace","pathFromRoutes","relative","routesDirectory","genPath","routeGenDirectory","genPathNoExt","removeExt","genDir","fileNameNoExt","fullDir","variable","fileToVariable","isDirectory","isIndex","d","reparented","forEach","i","parent","find","dd","childRoutesDir","children","child","buildRouteConfig","nodes","depth","n","node","new","version","isRoot","routeCode","readFile","hashSum","crypto","createHash","update","hash","digest","changed","code","ensureBoilerplate","writeFile","imports","transforms","isolatedProperties","key","exported","exports","transformed","isolateOptionToExport","isolate","detectExports","includes","filter","importedFiles","importFilename","routeConfigCode","generateRouteConfig","clientRouteConfigCode","route","length","childConfigs","spaces","Boolean","join","routeConfigChildrenText","split","endsWith","routeConfig","routeConfigClient","routeConfigFileContent","routeConfigClientFileContent","mkdir","recursive","ensureDir","dirname","exists","pathExists","current","allFiles","getAllFiles","removedNodes","newNodes","updatedNodes","unusedFiles","remove","reject","excludeDirFilter","through2","obj","item","enc","next","stats","items","klaw","pipe","on","capitalize","substring","lastIndexOf","Array","from","arr","accessors","sort","a","ai","b","bi","accessor","ao","bo","s","charAt","toUpperCase","slice"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAcA,IAAIA,UAAU,GAAG,CAAC,CAAA;AACX,MAAMC,aAAa,GAAG,SAAQ;AAC9B,MAAMC,mBAAmB,GAAG,gBAAe;AA+BlD,IAAIC,SAAsB,GAAGC,SAAU,CAAA;AAEhC,eAAeC,SAAS,CAACC,MAAc,EAAE;EAC9CC,OAAO,CAACC,GAAG,EAAE,CAAA;EAEb,IAAIC,KAAK,GAAG,KAAK,CAAA;EAEjB,IAAI,CAACN,SAAS,EAAE;AACdM,IAAAA,KAAK,GAAG,IAAI,CAAA;AACZF,IAAAA,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC,CAAA;AACtCL,IAAAA,SAAS,GAAG,EAAE,CAAA;AAChB,GAAC,MAAM;AACLI,IAAAA,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC,CAAA;AAC3C,GAAA;AAEA,EAAA,MAAME,MAAM,GAAGV,UAAU,GAAG,CAAC,CAAA;AAC7BA,EAAAA,UAAU,GAAGU,MAAM,CAAA;EAEnB,MAAMC,WAAW,GAAG,MAAM;IACxB,IAAIX,UAAU,KAAKU,MAAM,EAAE;MACzBH,OAAO,CAACC,GAAG,CAA6D,2DAAA,CAAA,CAAA;AACxE,MAAA,OAAO,KAAK,CAAA;AACd,KAAA;AAEA,IAAA,OAAO,IAAI,CAAA;GACZ,CAAA;AAED,EAAA,MAAMI,KAAK,GAAGC,IAAI,CAACC,GAAG,EAAE,CAAA;EACxB,IAAIC,kBAA4B,GAAG,EAAE,CAAA;EACrC,IAAIC,wBAAkC,GAAG,EAAE,CAAA;EAE3C,IAAIC,YAAY,GAAG,KAAK,CAAA;EACxB,MAAMC,SAA6B,GAAG,EAAE,CAAA;AACxC,EAAA,MAAMC,cAAc,GAAG,CAACC,QAAgB,EAAEC,OAAe,KAAK;IAC5DH,SAAS,CAACI,IAAI,CAAC,CAACF,QAAQ,EAAEC,OAAO,CAAC,CAAC,CAAA;GACpC,CAAA;EAED,eAAeE,QAAQ,CAACC,GAAW,EAAwB;AACzD,IAAA,IAAIC,OAAO,CAAA;IAEX,IAAI;AACFA,MAAAA,OAAO,GAAG,MAAMC,sBAAE,CAACC,OAAO,CAACH,GAAG,CAAC,CAAA;KAChC,CAAC,OAAOI,GAAG,EAAE;MACZrB,OAAO,CAACC,GAAG,EAAE,CAAA;AACbD,MAAAA,OAAO,CAACsB,KAAK,CACX,+DAA+D,CAChE,CAAA;MACDtB,OAAO,CAACC,GAAG,EAAE,CAAA;AACb,MAAA,MAAMoB,GAAG,CAAA;AACX,KAAA;AAEA,IAAA,MAAME,YAAY,GAAGC,WAAW,CAC9B,MAAMC,OAAO,CAACC,GAAG,CACfR,OAAO,CAACS,GAAG,CAAC,MAAOd,QAAQ,IAAyB;MAClD,MAAMe,QAAQ,GAAGC,wBAAI,CAACC,OAAO,CAACb,GAAG,EAAEJ,QAAQ,CAAC,CAAA;MAC5C,MAAMkB,IAAI,GAAG,MAAMZ,sBAAE,CAACa,KAAK,CAACJ,QAAQ,CAAC,CAAA;AACrC,MAAA,MAAMK,GAAG,GAAGJ,wBAAI,CAACK,OAAO,CAACrB,QAAQ,CAAC,CAAA;MAElC,MAAMsB,cAAc,GAAGtB,QAAQ,CAACuB,OAAO,CAACH,GAAG,EAAYA,SAAAA,GAAAA,GAAG,CAAG,CAAA;MAE7D,MAAMI,cAAc,GAAGR,wBAAI,CAACS,QAAQ,CAACvC,MAAM,CAACwC,eAAe,EAAEX,QAAQ,CAAC,CAAA;MACtE,MAAMY,OAAO,GAAGX,wBAAI,CAACC,OAAO,CAAC/B,MAAM,CAAC0C,iBAAiB,EAAEJ,cAAc,CAAC,CAAA;AAEtE,MAAA,MAAMK,YAAY,GAAGC,SAAS,CAACH,OAAO,CAAC,CAAA;MACvC,MAAMI,MAAM,GAAGf,wBAAI,CAACC,OAAO,CAACU,OAAO,EAAE,IAAI,CAAC,CAAA;AAE1C,MAAA,MAAMK,aAAa,GAAGF,SAAS,CAAC9B,QAAQ,CAAC,CAAA;MAEzC,OAAO;QACLA,QAAQ;QACRsB,cAAc;QACdU,aAAa;QACbjB,QAAQ;AACRkB,QAAAA,OAAO,EAAE7B,GAAG;QACZuB,OAAO;QACPI,MAAM;QACNF,YAAY;AACZK,QAAAA,QAAQ,EAAEC,cAAc,CAACL,SAAS,CAACN,cAAc,CAAC,CAAC;AACnDY,QAAAA,WAAW,EAAElB,IAAI,CAACkB,WAAW,EAAE;QAC/BC,OAAO,EAAEL,aAAa,KAAK,OAAA;OAC5B,CAAA;AACH,KAAC,CAAC,CACH,EACD,CACGM,CAAC,IAAMA,CAAC,CAACN,aAAa,KAAK,OAAO,GAAG,CAAC,CAAC,GAAG,CAAE,EAC5CM,CAAC,IAAKA,CAAC,CAACN,aAAa,EACrBM,CAAC,IAAMA,CAAC,CAACF,WAAW,GAAG,CAAC,GAAG,CAAC,CAAE,CAChC,CACF,CAAA;IAED,MAAMG,UAA+B,GAAG,EAAE,CAAA;AAE1C7B,IAAAA,YAAY,CAAC8B,OAAO,CAAC,OAAOF,CAAC,EAAEG,CAAC,KAAK;MACnC,IAAIH,CAAC,CAACF,WAAW,EAAE;QACjB,MAAMM,MAAM,GAAGH,UAAU,CAACI,IAAI,CAC3BC,EAAE,IAAK,CAACA,EAAE,CAACR,WAAW,IAAIQ,EAAE,CAACZ,aAAa,KAAKM,CAAC,CAACtC,QAAQ,CAC3D,CAAA;AAED,QAAA,IAAI0C,MAAM,EAAE;AACVA,UAAAA,MAAM,CAACG,cAAc,GAAGP,CAAC,CAACvB,QAAQ,CAAA;AACpC,SAAC,MAAM;AACLwB,UAAAA,UAAU,CAACrC,IAAI,CAACoC,CAAC,CAAC,CAAA;AACpB,SAAA;AACF,OAAC,MAAM;AACLC,QAAAA,UAAU,CAACrC,IAAI,CAACoC,CAAC,CAAC,CAAA;AACpB,OAAA;AACF,KAAC,CAAC,CAAA;IAEF,OAAO1B,OAAO,CAACC,GAAG,CAChB0B,UAAU,CAACzB,GAAG,CAAC,MAAOwB,CAAC,IAAK;MAC1B,IAAIA,CAAC,CAACO,cAAc,EAAE;QACpB,MAAMC,QAAQ,GAAG,MAAM3C,QAAQ,CAACmC,CAAC,CAACO,cAAc,CAAC,CAAA;AAEjDP,QAAAA,CAAC,4CACIA,CAAC,EAAA;AACJQ,UAAAA,QAAAA;SACD,CAAA,CAAA;QAEDA,QAAQ,CAACN,OAAO,CAAEO,KAAK,IAAMA,KAAK,CAACL,MAAM,GAAGJ,CAAE,CAAC,CAAA;AAE/C,QAAA,OAAOA,CAAC,CAAA;AACV,OAAA;AACA,MAAA,OAAOA,CAAC,CAAA;AACV,KAAC,CAAC,CACH,CAAA;AACH,GAAA;EAEA,MAAMC,UAAU,GAAG,MAAMpC,QAAQ,CAACjB,MAAM,CAACwC,eAAe,CAAC,CAAA;AAEzD,EAAA,eAAesB,gBAAgB,CAC7BC,KAAkB,EAClBC,KAAK,EACY;AAAA,IAAA,IADjBA,KAAK,KAAA,KAAA,CAAA,EAAA;AAALA,MAAAA,KAAK,GAAG,CAAC,CAAA;AAAA,KAAA;IAET,MAAMJ,QAAQ,GAAGG,KAAK,CAACnC,GAAG,CAAC,MAAOqC,CAAC,IAAK;AAAA,MAAA,IAAA,cAAA,CAAA;AACtC,MAAA,IAAIC,IAAI,GAAGrE,SAAS,CAAC4D,IAAI,CAAEL,CAAC,IAAKA,CAAC,CAACvB,QAAQ,KAAKoC,CAAC,CAACpC,QAAQ,CAAE,CAAA;AAE5D,MAAA,IAAIqC,IAAI,EAAE;QACRA,IAAI,CAACC,GAAG,GAAG,KAAK,CAAA;AAClB,OAAC,MAAM;AACLD,QAAAA,IAAI,GAAGD,CAAC,CAAA;AACRpE,QAAAA,SAAS,CAACmB,IAAI,CAACkD,IAAI,CAAC,CAAA;QACpB,IAAI,CAAC/D,KAAK,EAAE;UACV+D,IAAI,CAACC,GAAG,GAAG,IAAI,CAAA;AACjB,SAAA;AACF,OAAA;MAEAD,IAAI,CAACE,OAAO,GAAG1E,UAAU,CAAA;AACzB,MAAA,IAAIwE,IAAI,CAACpB,aAAa,KAAK,QAAQ,EAAE;QACnCoB,IAAI,CAACG,MAAM,GAAG,IAAI,CAAA;AACpB,OAAA;AAEA,MAAA,MAAMC,SAAS,GAAG,MAAMlD,sBAAE,CAACmD,QAAQ,CAACL,IAAI,CAACrC,QAAQ,EAAE,OAAO,CAAC,CAAA;AAE3D,MAAA,MAAM2C,OAAO,GAAGC,0BAAM,CAACC,UAAU,CAAC,QAAQ,CAAC,CAAA;AAC3CF,MAAAA,OAAO,CAACG,MAAM,CAACL,SAAS,CAAC,CAAA;AACzB,MAAA,MAAMM,IAAI,GAAGJ,OAAO,CAACK,MAAM,CAAC,KAAK,CAAC,CAAA;AAElCX,MAAAA,IAAI,CAACY,OAAO,GAAGZ,IAAI,CAACU,IAAI,KAAKA,IAAI,CAAA;MACjC,IAAIV,IAAI,CAACY,OAAO,EAAE;AAChBnE,QAAAA,YAAY,GAAG,IAAI,CAAA;QACnBuD,IAAI,CAACU,IAAI,GAAGA,IAAI,CAAA;QAEhB,IAAI;AACF;UACA,MAAMG,IAAI,GAAG,MAAMC,+BAAiB,CAACd,IAAI,EAAEI,SAAS,CAAC,CAAA;AAErD,UAAA,IAAIS,IAAI,EAAE;YACR,MAAM3D,sBAAE,CAAC6D,SAAS,CAACf,IAAI,CAACrC,QAAQ,EAAEkD,IAAI,CAAC,CAAA;AACzC,WAAA;UAEA,IAAIG,OAAyB,GAAG,EAAE,CAAA;AAElC,UAAA,IAAI,CAAChB,IAAI,CAACG,MAAM,EAAE;AAChB;AACA,YAAA,MAAMc,UAAU,GAAG,MAAMzD,OAAO,CAACC,GAAG,CAClCyD,gCAAkB,CAACxD,GAAG,CAAC,MAAOyD,GAAG,IAA8B;cAC7D,IAAIC,QAAQ,GAAG,KAAK,CAAA;cACpB,IAAIC,OAAiB,GAAG,EAAE,CAAA;cAE1B,MAAMC,WAAW,GAAG,MAAMC,mCAAqB,CAC7CvB,IAAI,EACJI,SAAS,EACT;AACEoB,gBAAAA,OAAO,EAAEL,GAAAA;AACX,eAAC,CACF,CAAA;AAED,cAAA,IAAIG,WAAW,EAAE;AACfD,gBAAAA,OAAO,GAAG,MAAMI,2BAAa,CAACH,WAAW,CAAC,CAAA;AAC1C,gBAAA,IAAID,OAAO,CAACK,QAAQ,CAACP,GAAG,CAAC,EAAE;AACzBC,kBAAAA,QAAQ,GAAG,IAAI,CAAA;AACjB,iBAAA;AACF,eAAA;cAEA,OAAO;gBAAED,GAAG;gBAAEC,QAAQ;AAAEP,gBAAAA,IAAI,EAAES,WAAAA;eAAa,CAAA;AAC7C,aAAC,CAAC,CACH,CAAA;AAEDN,YAAAA,OAAO,GAAGC,UAAU,CAACU,MAAM,CAAC,IAAA,IAAA;cAAA,IAAC;AAAEP,gBAAAA,QAAAA;eAAU,GAAA,IAAA,CAAA;AAAA,cAAA,OAAKA,QAAQ,CAAA;aAAC,CAAA,CAAA;AAEvDpB,YAAAA,IAAI,CAAC4B,aAAa,GAAG,MAAMpE,OAAO,CAACC,GAAG,CACpCuD,OAAO,CAACtD,GAAG,CAAC,KAAmB,IAAA;cAAA,IAAlB;gBAAEyD,GAAG;AAAEN,gBAAAA,IAAAA;eAAM,GAAA,KAAA,CAAA;AACxB,cAAA,MAAMgB,cAAc,GAAM7B,IAAI,CAACvB,YAAY,GAAA,GAAA,GAAI0C,GAAG,GAAM,MAAA,CAAA;AACxDxE,cAAAA,cAAc,CAACkF,cAAc,EAAEhB,IAAI,CAAE,CAAA;AACrC,cAAA,OAAOgB,cAAc,CAAA;AACvB,aAAC,CAAC,CACH,CAAA;AACH,WAAA;AAEA,UAAA,MAAMC,eAAe,GAAG,MAAMC,iCAAmB,CAC/C/B,IAAI,EACJI,SAAS,EACTY,OAAO,EACP,KAAK,CACN,CAAA;AAED,UAAA,MAAMgB,qBAAqB,GAAG,MAAMD,iCAAmB,CACrD/B,IAAI,EACJI,SAAS,EACTY,OAAO,EACP,IAAI,CACL,CAAA;AAEDrE,UAAAA,cAAc,CAACqD,IAAI,CAACzB,OAAO,EAAEuD,eAAe,CAAC,CAAA;AAC7CnF,UAAAA,cAAc,CACZiB,wBAAI,CAACC,OAAO,CAACmC,IAAI,CAACrB,MAAM,EAAEqB,IAAI,CAAC9B,cAAc,CAAC,EAC9C8D,qBAAqB,CACtB,CAAA;SACF,CAAC,OAAO5E,GAAG,EAAE;UACZ4C,IAAI,CAACU,IAAI,GAAG,EAAE,CAAA;AAChB,SAAA;AACF,OAAA;MAEAnE,kBAAkB,CAACO,IAAI,CACMkD,0BAAAA,GAAAA,IAAI,CAAClB,QAAQ,GAAA,kBAAA,GAAmBJ,SAAS,CAClEd,wBAAI,CAACS,QAAQ,CAACvC,MAAM,CAAC0C,iBAAiB,EAAEwB,IAAI,CAACzB,OAAO,CAAC,CACtD,GACF,GAAA,CAAA,CAAA;AAED/B,MAAAA,wBAAwB,CAACM,IAAI,CACAkD,0BAAAA,GAAAA,IAAI,CAAClB,QAAQ,GAAmBJ,kBAAAA,GAAAA,SAAS,CAClEd,wBAAI,CAACS,QAAQ,CACXvC,MAAM,CAAC0C,iBAAiB,EACxBZ,wBAAI,CAACC,OAAO,CAACmC,IAAI,CAACrB,MAAM,EAAEqB,IAAI,CAAC9B,cAAc,CAAC,CAC/C,CACF,GACF,GAAA,CAAA,CAAA;MAED,IAAI8B,IAAI,CAACG,MAAM,EAAE;AACf,QAAA,OAAOvE,SAAS,CAAA;AAClB,OAAA;AAEA,MAAA,MAAMqG,KAAK,GAAMjC,IAAI,CAAClB,QAAQ,GAAO,OAAA,CAAA;AAErC,MAAA,IAAA,CAAA,cAAA,GAAIkB,IAAI,CAACN,QAAQ,KAAb,IAAA,IAAA,cAAA,CAAewC,MAAM,EAAE;AACzB,QAAA,MAAMC,YAAY,GAAG,MAAMvC,gBAAgB,CAACI,IAAI,CAACN,QAAQ,EAAEI,KAAK,GAAG,CAAC,CAAC,CAAA;AACrE,QAAA,OAAUmC,KAAK,GAAmBG,kBAAAA,GAAAA,MAAM,CACtCtC,KAAK,GAAG,CAAC,CACV,GAAGqC,YAAY,UAAKC,MAAM,CAACtC,KAAK,GAAG,CAAC,CAAC,GAAA,IAAA,CAAA;AACxC,OAAA;AAEA,MAAA,OAAOmC,KAAK,CAAA;AACd,KAAC,CAAC,CAAA;IAEF,OAAO,CAAC,MAAMzE,OAAO,CAACC,GAAG,CAACiC,QAAQ,CAAC,EAChCiC,MAAM,CAACU,OAAO,CAAC,CACfC,IAAI,CAAOF,KAAAA,GAAAA,MAAM,CAACtC,KAAK,GAAG,CAAC,CAAC,CAAG,CAAA;AACpC,GAAA;AAEA,EAAA,MAAMyC,uBAAuB,GAAG,MAAM3C,gBAAgB,CAACT,UAAU,CAAC,CAAA;EAElE5C,kBAAkB,GAAGgB,WAAW,CAAChB,kBAAkB,EAAE,CAClD2C,CAAC,IAAMA,CAAC,CAACwC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,CAAE,EACrCxC,CAAC,IAAKA,CAAC,CAACsD,KAAK,CAAC,GAAG,CAAC,CAACN,MAAM,EACzBhD,CAAC,IAAMA,CAAC,CAACuD,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,CAAE,EACrCvD,CAAC,IAAKA,CAAC,CACT,CAAC,CAAA;EAEF1C,wBAAwB,GAAGe,WAAW,CAACf,wBAAwB,EAAE,CAC9D0C,CAAC,IAAMA,CAAC,CAACwC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,CAAE,EACrCxC,CAAC,IAAKA,CAAC,CAACsD,KAAK,CAAC,GAAG,CAAC,CAACN,MAAM,EACzBhD,CAAC,IAAMA,CAAC,CAACuD,QAAQ,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,GAAG,CAAE,EAC5CvD,CAAC,IAAKA,CAAC,CACT,CAAC,CAAA;EAEF,MAAMwD,WAAW,GAA4DH,wDAAAA,GAAAA,uBAAuB,GAA+D,+DAAA,CAAA;EACnK,MAAMI,iBAAiB,GAAkEJ,8DAAAA,GAAAA,uBAAuB,GAAgC,gCAAA,CAAA;AAEhJ,EAAA,MAAMK,sBAAsB,GAAG,CAC7BrG,kBAAkB,CAAC+F,IAAI,CAAC,IAAI,CAAC,EAC7BI,WAAW,CACZ,CAACJ,IAAI,CAAC,MAAM,CAAC,CAAA;AAEd,EAAA,MAAMO,4BAA4B,GAAG,CAAA,6DAAA,EAEnCrG,wBAAwB,CAAC8F,IAAI,CAAC,IAAI,CAAC,EACnCK,iBAAiB,CAClB,CAACL,IAAI,CAAC,MAAM,CAAC,CAAA;AAEd,EAAA,IAAI7F,YAAY,EAAE;AAChBE,IAAAA,cAAc,CACZiB,wBAAI,CAACC,OAAO,CAAC/B,MAAM,CAAC0C,iBAAiB,EAAE,gBAAgB,CAAC,EACxDoE,sBAAsB,CACvB,CAAA;AACDjG,IAAAA,cAAc,CACZiB,wBAAI,CAACC,OAAO,CAAC/B,MAAM,CAAC0C,iBAAiB,EAAE,uBAAuB,CAAC,EAC/DqE,4BAA4B,CAC7B,CAAA;AACH,GAAA;;AAEA;AACA,EAAA,MAAM3F,sBAAE,CAAC4F,KAAK,CAAChH,MAAM,CAAC0C,iBAAiB,EAAE;AAAEuE,IAAAA,SAAS,EAAE,IAAA;AAAK,GAAC,CAAC,CAAA;EAE7D,IAAI,CAAC5G,WAAW,EAAE,EAAE,OAAA;EAEpB,MAAMqB,OAAO,CAACC,GAAG,CACff,SAAS,CAACgB,GAAG,CAAC,MAA+B,KAAA,IAAA;AAAA,IAAA,IAAxB,CAACd,QAAQ,EAAEC,OAAO,CAAC,GAAA,KAAA,CAAA;IACtC,MAAMK,sBAAE,CAAC8F,SAAS,CAACpF,wBAAI,CAACqF,OAAO,CAACrG,QAAQ,CAAC,CAAC,CAAA;IAC1C,MAAMsG,MAAM,GAAG,MAAMhG,sBAAE,CAACiG,UAAU,CAACvG,QAAQ,CAAC,CAAA;IAC5C,IAAIwG,OAAO,GAAG,EAAE,CAAA;AAChB,IAAA,IAAIF,MAAM,EAAE;MACVE,OAAO,GAAG,MAAMlG,sBAAE,CAACmD,QAAQ,CAACzD,QAAQ,EAAE,OAAO,CAAC,CAAA;AAChD,KAAA;IACA,IAAIwG,OAAO,KAAKvG,OAAO,EAAE;AACvB,MAAA,MAAMK,sBAAE,CAAC6D,SAAS,CAACnE,QAAQ,EAAEC,OAAO,CAAC,CAAA;AACvC,KAAA;AACF,GAAC,CAAC,CACH,CAAA;EAED,IAAI,CAACV,WAAW,EAAE,EAAE,OAAA;EAEpB,MAAMkH,QAAQ,GAAG,MAAMC,WAAW,CAACxH,MAAM,CAAC0C,iBAAiB,CAAC,CAAA;EAE5D,IAAI,CAACrC,WAAW,EAAE,EAAE,OAAA;EAEpB,MAAMoH,YAAyB,GAAG,EAAE,CAAA;AAEpC5H,EAAAA,SAAS,GAAGA,SAAS,CAACgG,MAAM,CAAEzC,CAAC,IAAK;AAClC,IAAA,IAAIA,CAAC,CAACgB,OAAO,KAAK1E,UAAU,EAAE;AAC5B+H,MAAAA,YAAY,CAACzG,IAAI,CAACoC,CAAC,CAAC,CAAA;AACpB,MAAA,OAAO,KAAK,CAAA;AACd,KAAA;AACA,IAAA,OAAO,IAAI,CAAA;AACb,GAAC,CAAC,CAAA;EAEF,MAAMsE,QAAQ,GAAG7H,SAAS,CAACgG,MAAM,CAAEzC,CAAC,IAAKA,CAAC,CAACe,GAAG,CAAC,CAAA;AAC/C,EAAA,MAAMwD,YAAY,GAAG9H,SAAS,CAACgG,MAAM,CAAEzC,CAAC,IAAK,CAACA,CAAC,CAACe,GAAG,IAAIf,CAAC,CAAC0B,OAAO,CAAC,CAAA;AAEjE,EAAA,MAAM8C,WAAW,GAAGL,QAAQ,CAAC1B,MAAM,CAAEzC,CAAC,IAAK;IACzC,IACEA,CAAC,KAAKtB,wBAAI,CAACC,OAAO,CAAC/B,MAAM,CAAC0C,iBAAiB,EAAE,gBAAgB,CAAC,IAC9DU,CAAC,KAAKtB,wBAAI,CAACC,OAAO,CAAC/B,MAAM,CAAC0C,iBAAiB,EAAE,uBAAuB,CAAC,EACrE;AACA,MAAA,OAAO,KAAK,CAAA;AACd,KAAA;AAEA,IAAA,IAAIwB,IAAI,GAAGrE,SAAS,CAAC4D,IAAI,CACtBQ,CAAC,IAAA;AAAA,MAAA,IAAA,gBAAA,CAAA;AAAA,MAAA,OACAA,CAAC,CAACxB,OAAO,KAAKW,CAAC,IACftB,wBAAI,CAACC,OAAO,CAACkC,CAAC,CAACpB,MAAM,EAAEoB,CAAC,CAAC7B,cAAc,CAAC,KAAKgB,CAAC,KAC9Ca,CAAAA,gBAAAA,GAAAA,CAAC,CAAC6B,aAAa,KAAf,IAAA,GAAA,KAAA,CAAA,GAAA,gBAAA,CAAiBF,QAAQ,CAACxC,CAAC,CAAC,CAAA,CAAA;KAC/B,CAAA,CAAA;AAED,IAAA,OAAO,CAACc,IAAI,CAAA;AACd,GAAC,CAAC,CAAA;EAEF,MAAMxC,OAAO,CAACC,GAAG,CACfiG,WAAW,CAAChG,GAAG,CAAEwB,CAAC,IAAK;AACrBhC,IAAAA,sBAAE,CAACyG,MAAM,CAACzE,CAAC,CAAC,CAAA;AACd,GAAC,CAAC,CACH,CAAA;AAEDnD,EAAAA,OAAO,CAACC,GAAG,CACOL,yBAAAA,GAAAA,SAAS,CAACuG,MAAM,GAAc7F,aAAAA,IAAAA,IAAI,CAACC,GAAG,EAAE,GAAGF,KAAK,CACjE,GAAA,IAAA,CAAA,CAAA;EAED,IAAIoH,QAAQ,CAACtB,MAAM,IAAIuB,YAAY,CAACvB,MAAM,IAAIqB,YAAY,CAACrB,MAAM,EAAE;IACjE,IAAIsB,QAAQ,CAACtB,MAAM,EAAE;AACnBnG,MAAAA,OAAO,CAACC,GAAG,CAAA,qBAAA,GAAawH,QAAQ,CAACtB,MAAM,GAAc,aAAA,CAAA,CAAA;AACvD,KAAA;IAEA,IAAIuB,YAAY,CAACvB,MAAM,EAAE;AACvBnG,MAAAA,OAAO,CAACC,GAAG,CAAA,iBAAA,GAAcyH,YAAY,CAACvB,MAAM,GAAU,SAAA,CAAA,CAAA;AACxD,KAAA;IAEA,IAAIqB,YAAY,CAACrB,MAAM,EAAE;AACvBnG,MAAAA,OAAO,CAACC,GAAG,CAAA,uBAAA,GAAeuH,YAAY,CAACrB,MAAM,GAAiB,gBAAA,CAAA,CAAA;AAChE,KAAA;AACF,GAAC,MAAM;IACLnG,OAAO,CAACC,GAAG,CAAuC,+CAAA,CAAA,CAAA;AACpD,GAAA;AACF,CAAA;AAEA,SAASsH,WAAW,CAACtG,GAAW,EAAqB;AACnD,EAAA,OAAO,IAAIQ,OAAO,CAAC,CAACK,OAAO,EAAE+F,MAAM,KAAK;AACtC,IAAA,MAAMC,gBAAgB,GAAGC,4BAAQ,CAACC,GAAG,CAAC,UAAUC,IAAI,EAAEC,GAAG,EAAEC,IAAI,EAAE;AAC/D,MAAA,IAAI,CAACF,IAAI,CAACG,KAAK,CAACnF,WAAW,EAAE,EAAE,IAAI,CAAClC,IAAI,CAACkH,IAAI,CAAC,CAAA;AAC9CE,MAAAA,IAAI,EAAE,CAAA;AACR,KAAC,CAAC,CAAA;IAEF,MAAME,KAAe,GAAG,EAAE,CAAA;IAE1BC,wBAAI,CAACrH,GAAG,CAAC,CACNsH,IAAI,CAACT,gBAAgB,CAAC,CACtBU,EAAE,CAAC,MAAM,EAAGP,IAAI,IAAKI,KAAK,CAACtH,IAAI,CAACkH,IAAI,CAACpG,IAAI,CAAC,CAAC,CAC3C2G,EAAE,CAAC,OAAO,EAAGnH,GAAG,IAAKwG,MAAM,CAACxG,GAAG,CAAC,CAAC,CACjCmH,EAAE,CAAC,KAAK,EAAE,MAAM1G,OAAO,CAACuG,KAAK,CAAC,CAAC,CAAA;AACpC,GAAC,CAAC,CAAA;AACJ,CAAA;AAEA,SAASrF,cAAc,CAACG,CAAS,EAAE;AACjC,EAAA,OAAOA,CAAC,CACLsD,KAAK,CAAC,GAAG,CAAC,CACV9E,GAAG,CAAC,CAACwB,CAAC,EAAEG,CAAC,KAAMA,CAAC,GAAG,CAAC,GAAGmF,UAAU,CAACtF,CAAC,CAAC,GAAGA,CAAE,CAAC,CAC1CoD,IAAI,CAAC,EAAE,CAAC,CACRnE,OAAO,CAAC,uBAAuB,EAAE,EAAE,CAAC,CAAA;AACzC,CAAA;AAEO,SAASO,SAAS,CAACQ,CAAS,EAAE;AACnC,EAAA,OAAOA,CAAC,CAACuF,SAAS,CAAC,CAAC,EAAEvF,CAAC,CAACwF,WAAW,CAAC,GAAG,CAAC,CAAC,IAAIxF,CAAC,CAAA;AAChD,CAAA;AAEA,SAASkD,MAAM,CAAClD,CAAS,EAAU;EACjC,OAAOyF,KAAK,CAACC,IAAI,CAAC;AAAE1C,IAAAA,MAAM,EAAEhD,CAAAA;GAAG,CAAC,CAC7BxB,GAAG,CAAC,MAAM,GAAG,CAAC,CACd4E,IAAI,CAAC,EAAE,CAAC,CAAA;AACb,CAAA;AAEO,SAAS/E,WAAW,CACzBsH,GAAQ,EACRC,SAA+B,EAC1B;AAAA,EAAA,IADLA,SAA+B,KAAA,KAAA,CAAA,EAAA;AAA/BA,IAAAA,SAA+B,GAAG,CAAE5F,CAAC,IAAKA,CAAC,CAAC,CAAA;AAAA,GAAA;AAE5C,EAAA,OAAO2F,GAAG,CACPnH,GAAG,CAAC,CAACwB,CAAC,EAAEG,CAAC,KAAK,CAACH,CAAC,EAAEG,CAAC,CAAU,CAAC,CAC9B0F,IAAI,CAAC,CAAsB,KAAA,EAAA,KAAA,KAAA;AAAA,IAAA,IAArB,CAACC,CAAC,EAAEC,EAAE,CAAC,GAAA,KAAA,CAAA;AAAA,IAAA,IAAE,CAACC,CAAC,EAAEC,EAAE,CAAC,GAAA,KAAA,CAAA;AACrB,IAAA,KAAK,MAAMC,QAAQ,IAAIN,SAAS,EAAE;AAChC,MAAA,MAAMO,EAAE,GAAGD,QAAQ,CAACJ,CAAC,CAAC,CAAA;AACtB,MAAA,MAAMM,EAAE,GAAGF,QAAQ,CAACF,CAAC,CAAC,CAAA;AAEtB,MAAA,IAAI,OAAOG,EAAE,KAAK,WAAW,EAAE;AAC7B,QAAA,IAAI,OAAOC,EAAE,KAAK,WAAW,EAAE;AAC7B,UAAA,SAAA;AACF,SAAA;AACA,QAAA,OAAO,CAAC,CAAA;AACV,OAAA;MAEA,IAAID,EAAE,KAAKC,EAAE,EAAE;AACb,QAAA,SAAA;AACF,OAAA;AAEA,MAAA,OAAOD,EAAE,GAAGC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAA;AACzB,KAAA;IAEA,OAAOL,EAAE,GAAGE,EAAE,CAAA;GACf,CAAC,CACDzH,GAAG,CAAC,KAAA,IAAA;IAAA,IAAC,CAACwB,CAAC,CAAC,GAAA,KAAA,CAAA;AAAA,IAAA,OAAKA,CAAC,CAAA;GAAC,CAAA,CAAA;AACpB,CAAA;AAEA,SAASsF,UAAU,CAACe,CAAS,EAAE;AAC7B,EAAA,IAAI,OAAOA,CAAC,KAAK,QAAQ,EAAE,OAAO,EAAE,CAAA;AACpC,EAAA,OAAOA,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE,GAAGF,CAAC,CAACG,KAAK,CAAC,CAAC,CAAC,CAAA;AAC/C;;;;;;;;"}