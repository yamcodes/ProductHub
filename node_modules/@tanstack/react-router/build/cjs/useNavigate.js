/**
 * @tanstack/react-router/src/index.tsx
 *
 * Copyright (c) TanStack
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var Matches = require('./Matches.js');
var RouterProvider = require('./RouterProvider.js');
var utils = require('./utils.js');

function _interopNamespace(e) {
  if (e && e.__esModule) return e;
  var n = Object.create(null);
  if (e) {
    Object.keys(e).forEach(function (k) {
      if (k !== 'default') {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () { return e[k]; }
        });
      }
    });
  }
  n["default"] = e;
  return Object.freeze(n);
}

var React__namespace = /*#__PURE__*/_interopNamespace(React);

function useNavigate(defaultOpts) {
  const {
    navigate
  } = RouterProvider.useRouter();
  const match = Matches.useMatch({
    strict: false
  });
  return React__namespace.useCallback(opts => {
    return navigate({
      from: opts?.to ? match.pathname : undefined,
      ...defaultOpts,
      ...opts
    });
  }, []);
}
function typedNavigate(navigate) {
  return navigate;
} //

function Navigate(props) {
  const {
    navigate
  } = RouterProvider.useRouter();
  const match = Matches.useMatch({
    strict: false
  });
  utils.useLayoutEffect(() => {
    navigate({
      from: props.to ? match.pathname : undefined,
      ...props
    });
  }, []);
  return null;
}

exports.Navigate = Navigate;
exports.typedNavigate = typedNavigate;
exports.useNavigate = useNavigate;
//# sourceMappingURL=useNavigate.js.map
