/**
 * @tanstack/react-router/src/index.tsx
 *
 * Copyright (c) TanStack
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');

function _interopNamespace(e) {
  if (e && e.__esModule) return e;
  var n = Object.create(null);
  if (e) {
    Object.keys(e).forEach(function (k) {
      if (k !== 'default') {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () { return e[k]; }
        });
      }
    });
  }
  n["default"] = e;
  return Object.freeze(n);
}

var React__namespace = /*#__PURE__*/_interopNamespace(React);

function CatchBoundary(props) {
  const errorComponent = props.errorComponent ?? ErrorComponent;
  return /*#__PURE__*/React__namespace.createElement(CatchBoundaryImpl, {
    resetKey: props.resetKey,
    onCatch: props.onCatch,
    children: ({
      error
    }) => {
      if (error) {
        return /*#__PURE__*/React__namespace.createElement(errorComponent, {
          error
        });
      }
      return props.children;
    }
  });
}
class CatchBoundaryImpl extends React__namespace.Component {
  state = {
    error: null
  };
  static getDerivedStateFromError(error) {
    return {
      error
    };
  }
  componentDidUpdate(prevProps, prevState) {
    if (prevState.error && prevProps.resetKey !== this.props.resetKey) {
      this.setState({
        error: null
      });
    }
  }
  componentDidCatch(error) {
    console.error(error);
    this.props.onCatch?.(error);
  }
  render() {
    return this.props.children(this.state);
  }
}
function ErrorComponent({
  error
}) {
  const [show, setShow] = React__namespace.useState(process.env.NODE_ENV !== 'production');
  return /*#__PURE__*/React__namespace.createElement("div", {
    style: {
      padding: '.5rem',
      maxWidth: '100%'
    }
  }, /*#__PURE__*/React__namespace.createElement("div", {
    style: {
      display: 'flex',
      alignItems: 'center',
      gap: '.5rem'
    }
  }, /*#__PURE__*/React__namespace.createElement("strong", {
    style: {
      fontSize: '1rem'
    }
  }, "Something went wrong!"), /*#__PURE__*/React__namespace.createElement("button", {
    style: {
      appearance: 'none',
      fontSize: '.6em',
      border: '1px solid currentColor',
      padding: '.1rem .2rem',
      fontWeight: 'bold',
      borderRadius: '.25rem'
    },
    onClick: () => setShow(d => !d)
  }, show ? 'Hide Error' : 'Show Error')), /*#__PURE__*/React__namespace.createElement("div", {
    style: {
      height: '.25rem'
    }
  }), show ? /*#__PURE__*/React__namespace.createElement("div", null, /*#__PURE__*/React__namespace.createElement("pre", {
    style: {
      fontSize: '.7em',
      border: '1px solid red',
      borderRadius: '.25rem',
      padding: '.3rem',
      color: 'red',
      overflow: 'auto'
    }
  }, error.message ? /*#__PURE__*/React__namespace.createElement("code", null, error.message) : null)) : null);
}

exports.CatchBoundary = CatchBoundary;
exports.CatchBoundaryImpl = CatchBoundaryImpl;
exports.ErrorComponent = ErrorComponent;
//# sourceMappingURL=CatchBoundary.js.map
