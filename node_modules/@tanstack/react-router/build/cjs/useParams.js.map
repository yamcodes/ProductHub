{"version":3,"file":"useParams.js","sources":["../../src/useParams.tsx"],"sourcesContent":["import { AnyRoute } from './route'\nimport { RouteIds, RouteById, AllParams } from './routeInfo'\nimport { RegisteredRouter } from './router'\nimport { last } from './utils'\nimport { useRouterState } from './RouterProvider'\nimport { StrictOrFrom } from './utils'\n\nexport function useParams<\n  TRouteTree extends AnyRoute = RegisteredRouter['routeTree'],\n  TFrom extends RouteIds<TRouteTree> = RouteIds<TRouteTree>,\n  TDefaultSelected = AllParams<TRouteTree> &\n    RouteById<TRouteTree, TFrom>['types']['allParams'],\n  TSelected = TDefaultSelected,\n>(\n  opts: StrictOrFrom<TFrom> & {\n    select?: (search: TDefaultSelected) => TSelected\n  },\n): TSelected {\n  return useRouterState({\n    select: (state: any) => {\n      const params = (last(state.matches) as any)?.params\n      return opts?.select ? opts.select(params) : params\n    },\n  })\n}\n"],"names":["useParams","opts","useRouterState","select","state","params","last","matches"],"mappings":";;;;;;;;;;;;;;;;;AAOO,SAASA,SAASA,CAOvBC,IAEC,EACU;AACX,EAAA,OAAOC,6BAAc,CAAC;IACpBC,MAAM,EAAGC,KAAU,IAAK;MACtB,MAAMC,MAAM,GAAIC,UAAI,CAACF,KAAK,CAACG,OAAO,CAAC,EAAUF,MAAM,CAAA;MACnD,OAAOJ,IAAI,EAAEE,MAAM,GAAGF,IAAI,CAACE,MAAM,CAACE,MAAM,CAAC,GAAGA,MAAM,CAAA;AACpD,KAAA;AACF,GAAC,CAAC,CAAA;AACJ;;;;"}