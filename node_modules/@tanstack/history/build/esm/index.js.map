{"version":3,"file":"index.js","sources":["../../src/index.ts"],"sourcesContent":["// While the public API was clearly inspired by the \"history\" npm package,\n// This implementation attempts to be more lightweight by\n// making assumptions about the way TanStack Router works\n\nexport interface RouterHistory {\n  location: HistoryLocation\n  subscribe: (cb: () => void) => () => void\n  push: (path: string, state?: any) => void\n  replace: (path: string, state?: any) => void\n  go: (index: number) => void\n  back: () => void\n  forward: () => void\n  createHref: (href: string) => string\n  block: (blockerFn: BlockerFn) => () => void\n  flush: () => void\n  destroy: () => void\n  notify: () => void\n}\n\nexport interface HistoryLocation extends ParsedPath {\n  state: HistoryState\n}\n\nexport interface ParsedPath {\n  href: string\n  pathname: string\n  search: string\n  hash: string\n}\n\nexport interface HistoryState {\n  key: string\n}\n\ntype BlockerFn = (retry: () => void, cancel: () => void) => void\n\nconst pushStateEvent = 'pushstate'\nconst popStateEvent = 'popstate'\nconst beforeUnloadEvent = 'beforeunload'\n\nconst beforeUnloadListener = (event: Event) => {\n  event.preventDefault()\n  // @ts-ignore\n  return (event.returnValue = '')\n}\n\nconst stopBlocking = () => {\n  removeEventListener(beforeUnloadEvent, beforeUnloadListener, {\n    capture: true,\n  })\n}\n\nfunction createHistory(opts: {\n  getLocation: () => HistoryLocation\n  pushState: (path: string, state: any, onUpdate: () => void) => void\n  replaceState: (path: string, state: any, onUpdate: () => void) => void\n  go: (n: number) => void\n  back: () => void\n  forward: () => void\n  createHref: (path: string) => string\n  flush?: () => void\n  destroy?: () => void\n}): RouterHistory {\n  let location = opts.getLocation()\n  let subscribers = new Set<() => void>()\n  let blockers: BlockerFn[] = []\n  let queue: (() => void)[] = []\n\n  const onUpdate = () => {\n    location = opts.getLocation()\n    subscribers.forEach((subscriber) => subscriber())\n  }\n\n  const tryUnblock = () => {\n    if (blockers.length) {\n      blockers[0]?.(tryUnblock, () => {\n        blockers = []\n        stopBlocking()\n      })\n      return\n    }\n\n    while (queue.length) {\n      queue.shift()?.()\n    }\n  }\n\n  const queueTask = (task: () => void) => {\n    queue.push(task)\n    tryUnblock()\n  }\n\n  return {\n    get location() {\n      return location\n    },\n    subscribe: (cb: () => void) => {\n      subscribers.add(cb)\n\n      return () => {\n        subscribers.delete(cb)\n      }\n    },\n    push: (path: string, state: any) => {\n      state = assignKey(state)\n      queueTask(() => {\n        opts.pushState(path, state, onUpdate)\n      })\n    },\n    replace: (path: string, state: any) => {\n      state = assignKey(state)\n      queueTask(() => {\n        opts.replaceState(path, state, onUpdate)\n      })\n    },\n    go: (index) => {\n      queueTask(() => {\n        opts.go(index)\n      })\n    },\n    back: () => {\n      queueTask(() => {\n        opts.back()\n      })\n    },\n    forward: () => {\n      queueTask(() => {\n        opts.forward()\n      })\n    },\n    createHref: (str) => opts.createHref(str),\n    block: (cb) => {\n      blockers.push(cb)\n\n      if (blockers.length === 1) {\n        addEventListener(beforeUnloadEvent, beforeUnloadListener, {\n          capture: true,\n        })\n      }\n\n      return () => {\n        blockers = blockers.filter((b) => b !== cb)\n\n        if (!blockers.length) {\n          stopBlocking()\n        }\n      }\n    },\n    flush: () => opts.flush?.(),\n    destroy: () => opts.destroy?.(),\n    notify: onUpdate,\n  }\n}\n\nfunction assignKey(state: HistoryState) {\n  if (!state) {\n    state = {} as HistoryState\n  }\n  return {\n    ...state,\n    key: createRandomKey(),\n  }\n}\n\n/**\n * Creates a history object that can be used to interact with the browser's\n * navigation. This is a lightweight API wrapping the browser's native methods.\n * It is designed to work with TanStack Router, but could be used as a standalone API as well.\n * IMPORTANT: This API implements history throttling via a microtask to prevent\n * excessive calls to the history API. In some browsers, calling history.pushState or\n * history.replaceState in quick succession can cause the browser to ignore subsequent\n * calls. This API smooths out those differences and ensures that your application\n * state will *eventually* match the browser state. In most cases, this is not a problem,\n * but if you need to ensure that the browser state is up to date, you can use the\n * `history.flush` method to immediately flush all pending state changes to the browser URL.\n * @param opts\n * @param opts.getHref A function that returns the current href (path + search + hash)\n * @param opts.createHref A function that takes a path and returns a href (path + search + hash)\n * @returns A history instance\n */\nexport function createBrowserHistory(opts?: {\n  getHref?: () => string\n  createHref?: (path: string) => string\n}): RouterHistory {\n  const getHref =\n    opts?.getHref ??\n    (() =>\n      `${window.location.pathname}${window.location.search}${window.location.hash}`)\n\n  const createHref = opts?.createHref ?? ((path) => path)\n\n  let currentLocation = parseLocation(getHref(), window.history.state)\n\n  const getLocation = () => currentLocation\n\n  let next:\n    | undefined\n    | {\n        // This is the latest location that we were attempting to push/replace\n        href: string\n        // This is the latest state that we were attempting to push/replace\n        state: any\n        // This is the latest type that we were attempting to push/replace\n        isPush: boolean\n      }\n\n  // Because we are proactively updating the location\n  // in memory before actually updating the browser history,\n  // we need to track when we are doing this so we don't\n  // notify subscribers twice on the last update.\n  let tracking = true\n\n  // We need to track the current scheduled update to prevent\n  // multiple updates from being scheduled at the same time.\n  let scheduled: Promise<void> | undefined\n\n  // This function is a wrapper to prevent any of the callback's\n  // side effects from causing a subscriber notification\n  const untrack = (fn: () => void) => {\n    tracking = false\n    fn()\n    tracking = true\n  }\n\n  // This function flushes the next update to the browser history\n  const flush = () => {\n    // Do not notify subscribers about this push/replace call\n    untrack(() => {\n      if (!next) return\n      window.history[next.isPush ? 'pushState' : 'replaceState'](\n        next.state,\n        '',\n        next.href,\n      )\n      // Reset the nextIsPush flag and clear the scheduled update\n      next = undefined\n      scheduled = undefined\n    })\n  }\n\n  // This function queues up a call to update the browser history\n  const queueHistoryAction = (\n    type: 'push' | 'replace',\n    path: string,\n    state: any,\n    onUpdate: () => void,\n  ) => {\n    const href = createHref(path)\n\n    // Update the location in memory\n    currentLocation = parseLocation(href, state)\n\n    // Keep track of the next location we need to flush to the URL\n    next = {\n      href,\n      state,\n      isPush: next?.isPush || type === 'push',\n    }\n    // Notify subscribers\n    onUpdate()\n\n    if (!scheduled) {\n      // Schedule an update to the browser history\n      scheduled = Promise.resolve().then(() => flush())\n    }\n  }\n\n  const onPushPop = () => {\n    currentLocation = parseLocation(getHref(), window.history.state)\n    history.notify()\n  }\n\n  var originalPushState = window.history.pushState\n  var originalReplaceState = window.history.replaceState\n\n  const history = createHistory({\n    getLocation,\n    pushState: (path, state, onUpdate) =>\n      queueHistoryAction('push', path, state, onUpdate),\n    replaceState: (path, state, onUpdate) =>\n      queueHistoryAction('replace', path, state, onUpdate),\n    back: () => window.history.back(),\n    forward: () => window.history.forward(),\n    go: (n) => window.history.go(n),\n    createHref: (path) => createHref(path),\n    flush,\n    destroy: () => {\n      window.history.pushState = originalPushState\n      window.history.replaceState = originalReplaceState\n      window.removeEventListener(pushStateEvent, onPushPop)\n      window.removeEventListener(popStateEvent, onPushPop)\n    },\n  })\n\n  window.addEventListener(pushStateEvent, onPushPop)\n  window.addEventListener(popStateEvent, onPushPop)\n\n  window.history.pushState = function () {\n    let res = originalPushState.apply(window.history, arguments as any)\n    if (tracking) history.notify()\n    return res\n  }\n\n  window.history.replaceState = function () {\n    let res = originalReplaceState.apply(window.history, arguments as any)\n    if (tracking) history.notify()\n    return res\n  }\n\n  return history\n}\n\nexport function createHashHistory(): RouterHistory {\n  return createBrowserHistory({\n    getHref: () => window.location.hash.substring(1),\n    createHref: (path) => `#${path}`,\n  })\n}\n\nexport function createMemoryHistory(\n  opts: {\n    initialEntries: string[]\n    initialIndex?: number\n  } = {\n    initialEntries: ['/'],\n  },\n): RouterHistory {\n  const entries = opts.initialEntries\n  let index = opts.initialIndex ?? entries.length - 1\n  let currentState = {\n    key: createRandomKey(),\n  } as HistoryState\n\n  const getLocation = () => parseLocation(entries[index]!, currentState)\n\n  return createHistory({\n    getLocation,\n    pushState: (path, state) => {\n      currentState = state\n      entries.push(path)\n      index++\n    },\n    replaceState: (path, state) => {\n      currentState = state\n      entries[index] = path\n    },\n    back: () => {\n      index--\n    },\n    forward: () => {\n      index = Math.min(index + 1, entries.length - 1)\n    },\n    go: (n) => window.history.go(n),\n    createHref: (path) => path,\n  })\n}\n\nfunction parseLocation(href: string, state: HistoryState): HistoryLocation {\n  let hashIndex = href.indexOf('#')\n  let searchIndex = href.indexOf('?')\n\n  return {\n    href,\n    pathname: href.substring(\n      0,\n      hashIndex > 0\n        ? searchIndex > 0\n          ? Math.min(hashIndex, searchIndex)\n          : hashIndex\n        : searchIndex > 0\n        ? searchIndex\n        : href.length,\n    ),\n    hash: hashIndex > -1 ? href.substring(hashIndex) : '',\n    search:\n      searchIndex > -1\n        ? href.slice(searchIndex, hashIndex === -1 ? undefined : hashIndex)\n        : '',\n    state: state || {},\n  }\n}\n\n// Thanks co-pilot!\nfunction createRandomKey() {\n  return (Math.random() + 1).toString(36).substring(7)\n}\n"],"names":["pushStateEvent","popStateEvent","beforeUnloadEvent","beforeUnloadListener","event","preventDefault","returnValue","stopBlocking","removeEventListener","capture","createHistory","opts","location","getLocation","subscribers","Set","blockers","queue","onUpdate","forEach","subscriber","tryUnblock","length","shift","queueTask","task","push","subscribe","cb","add","delete","path","state","assignKey","pushState","replace","replaceState","go","index","back","forward","createHref","str","block","addEventListener","filter","b","flush","destroy","notify","key","createRandomKey","createBrowserHistory","getHref","window","pathname","search","hash","currentLocation","parseLocation","history","next","tracking","scheduled","untrack","fn","isPush","href","undefined","queueHistoryAction","type","Promise","resolve","then","onPushPop","originalPushState","originalReplaceState","n","res","apply","arguments","createHashHistory","substring","createMemoryHistory","initialEntries","entries","initialIndex","currentState","Math","min","hashIndex","indexOf","searchIndex","slice","random","toString"],"mappings":"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"}