import{toNestErrors as r}from"@hookform/resolvers";import{parse as e,parseAsync as t,ValiError as o}from"valibot";import{appendErrors as n}from"react-hook-form";var a=function(r,e){for(var t={};r.issues.length;){var o=r.issues[0];if(o.path){var a=o.path.map(function(r){return r.key}).join(".");if(t[a]||(t[a]={message:o.message,type:o.validation}),e){var i=t[a].types,s=i&&i[o.validation];t[a]=n(a,e,t,o.validation,s?[].concat(s,o.message):o.message)}r.issues.shift()}}return t},i=function(n,i,s){return void 0===s&&(s={}),function(u,c,f){try{return Promise.resolve(function(r,o){try{var a=function(){function r(r){return{values:s.raw?u:r,errors:{}}}var o=Object.assign({},{abortEarly:!1,abortPipeEarly:!1},i);return"sync"===s.mode?r(e(n,u,o)):Promise.resolve(t(n,u,o)).then(r)}()}catch(r){return o(r)}return a&&a.then?a.then(void 0,o):a}(0,function(e){if(e instanceof o)return{values:{},errors:r(a(e,!f.shouldUseNativeValidation&&"all"===f.criteriaMode),f)};throw e}))}catch(r){return Promise.reject(r)}}};export{i as valibotResolver};
//# sourceMappingURL=valibot.module.js.map
