!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports,require("react-hook-form")):"function"==typeof define&&define.amd?define(["exports","react-hook-form"],r):r((e||self).hookformResolvers={},e.ReactHookForm)}(this,function(e,r){var t=function(e,t,o){if(e&&"reportValidity"in e){var i=r.get(o,t);e.setCustomValidity(i&&i.message||""),e.reportValidity()}},o=function(e,r){var o=function(o){var i=r.fields[o];i&&i.ref&&"reportValidity"in i.ref?t(i.ref,o,e):i.refs&&i.refs.forEach(function(r){return t(r,o,e)})};for(var i in r.fields)o(i)},i=function(e,r){return e.some(function(e){return e.startsWith(r+".")})};e.toNestErrors=function(e,t){t.shouldUseNativeValidation&&o(e,t);var n,f={};for(var s in e){var a=r.get(t.fields,s),l=Object.assign(e[s]||{},{ref:a&&a.ref});if(i(t.names||Object.keys(e),s)){var d=Object.assign({},(n=r.get(f,s),Array.isArray(n)?n.filter(Boolean):[]));r.set(d,"root",l),r.set(f,s,d)}else r.set(f,s,l)}return f},e.validateFieldsNatively=o});
//# sourceMappingURL=resolvers.umd.js.map
